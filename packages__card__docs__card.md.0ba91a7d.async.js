(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[30,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,95],{"0ftu":function(n,e,t){},"1ztH":function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(a.a.Fragment,null,a.a.createElement(o["a"],{layout:"center",bordered:!0},"colSpan - 24"),a.a.createElement(o["a"],{colSpan:12,layout:"center",bordered:!0,style:{marginTop:8}},"colSpan - 12"),a.a.createElement(o["a"],{colSpan:8,layout:"center",bordered:!0,style:{marginTop:8}},"colSpan - 8"),a.a.createElement(o["a"],{style:{marginTop:8},gutter:8,title:"24\u6805\u683c"},a.a.createElement(o["a"],{colSpan:12,layout:"center",bordered:!0},"colSpan-12"),a.a.createElement(o["a"],{colSpan:6,layout:"center",bordered:!0},"colSpan-6"),a.a.createElement(o["a"],{colSpan:6,layout:"center",bordered:!0},"colSpan-6")),a.a.createElement(o["a"],{style:{marginTop:8},gutter:8,ghost:!0},a.a.createElement(o["a"],{colSpan:"200px",layout:"center",bordered:!0},"colSpan - 200px"),a.a.createElement(o["a"],{layout:"center",bordered:!0},"Auto")),a.a.createElement(o["a"],{style:{marginTop:8},gutter:8,ghost:!0},a.a.createElement(o["a"],{bordered:!0},"Auto"),a.a.createElement(o["a"],{colSpan:"30%",bordered:!0},"colSpan - 30%")))},"5OYt":function(n,e,t){"use strict";var r=t("J4zp"),a=t.n(r),o=t("q1tI"),l=t("ACnJ");function i(){var n=Object(o["useState"])({}),e=a()(n,2),t=e[0],r=e[1];return Object(o["useEffect"])((function(){var n=l["a"].subscribe((function(n){r(n)}));return function(){return l["a"].unsubscribe(n)}}),[]),t}e["a"]=i},"69Bc":function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(o["a"],{title:"\u5de6\u53f3\u5206\u680f\u5e26\u6807\u9898",extra:"2019\u5e749\u670828\u65e5",split:"vertical",bordered:!0,headerBordered:!0},a.a.createElement(o["a"],{title:"\u5de6\u4fa7\u8be6\u60c5",colSpan:"300px"},"\u5de6\u4fa7\u5185\u5bb9"),a.a.createElement(o["a"],{title:"\u6d41\u91cf\u5360\u7528\u60c5\u51b5"},a.a.createElement("div",{style:{height:360}},"\u53f3\u4fa7\u5185\u5bb9")))},"8txm":function(n,e,t){},"961H":function(n,e,t){"use strict";t.r(e);t("Znn+");var r=t("ZTPi"),a=t("q1tI"),o=t.n(a),l=t("FlLn"),i=r["a"].TabPane;e["default"]=()=>o.a.createElement(l["a"],{bordered:!0},o.a.createElement(r["a"],{tabPosition:"left"},o.a.createElement(i,{tab:"Tab 1",key:"1"},"Content of Tab 1"),o.a.createElement(i,{tab:"Tab 2",key:"2"},"Content of Tab 2"),o.a.createElement(i,{tab:"Tab 3",key:"3"},"Content of Tab 3")))},"9p94":function(n,e,t){"use strict";t.d(e,"c",(function(){return c})),t.d(e,"d",(function(){return U})),t.d(e,"h",(function(){return J})),t.d(e,"a",(function(){return C})),t.d(e,"b",(function(){return P})),t.d(e,"n",(function(){return rn})),t.d(e,"f",(function(){return N})),t.d(e,"j",(function(){return A})),t.d(e,"k",(function(){return O})),t.d(e,"g",(function(){return $})),t.d(e,"e",(function(){return k["a"]})),t.d(e,"o",(function(){return F})),t.d(e,"l",(function(){return I})),t.d(e,"i",(function(){return j})),t.d(e,"m",(function(){return en}));t("DYRE");var r=t("zeV3"),a=(t("5Dmo"),t("3S7+")),o=t("q1tI"),l=t.n(o),i=t("+YFz"),s=t("vgIT"),d=(t("RUY5"),n=>{var e=n.label,t=n.tip,d=Object(o["useContext"])(s["ConfigContext"]),c=d.getPrefixCls;if(!t)return l.a.createElement(l.a.Fragment,null,e);var p=c("pro-core-label-tip"),m="string"===typeof t?{title:t}:t;return l.a.createElement(r["a"],{size:4,className:p},e,l.a.createElement(a["a"],m,l.a.createElement(i["a"],{className:"".concat(p,"-icon")})))}),c=d,p=(t("qVdP"),t("jsC+")),m=t("0Owb"),g=(t("+L6B"),t("2/Rp")),u=(t("e4px"),n=>{var e=n.onClear,t=n.onConfirm,r=n.disabled,a=Object(o["useContext"])(s["ConfigContext"]),i=a.getPrefixCls,d=i("pro-core-dropdown-footer");return l.a.createElement("div",{className:d,onClick:n=>{"confirm"!==n.target.getAttribute("data-type")&&n.stopPropagation()}},l.a.createElement(g["a"],{style:{visibility:e?"visible":"hidden"},type:"link",size:"small",disabled:r,onClick:n=>{e&&e(n),n.stopPropagation()}},"\u6e05\u9664"),l.a.createElement(g["a"],{"data-type":"confirm",type:"primary",size:"small",onClick:t,disabled:r},"\u786e\u8ba4"))}),b=u,f=(t("Uzcg"),n=>{var e=n.children,t=n.label,r=void 0===t?"hover me":t,a=n.footer,i=n.hideWhenClick,d=n.disabled,c=n.onVisibleChange,g=n.visible,u=Object(o["useContext"])(s["ConfigContext"]),f=u.getPrefixCls,C=f("pro-core-field-dropdown");return l.a.createElement(p["a"],{disabled:d,trigger:["click"],visible:g,onVisibleChange:c,overlay:l.a.createElement("div",{className:"".concat(C,"-overlay")},l.a.createElement("div",{className:"".concat(C,"-content"),onClick:n=>{i||n.stopPropagation()}},e),a&&l.a.createElement(b,Object(m["a"])({disabled:d},a)))},l.a.createElement("span",{className:"".concat(C,"-label")},r))}),C=f,y=t("4i/N"),x=t("8Skl"),h=t("TSYQ"),S=t.n(h),v=(t("0ftu"),n=>{var e=n.label,t=n.onClear,r=n.value,a=n.size,i=void 0===a?"middle":a,d=n.disabled,c=n.ellipsis,p=n.placeholder,m=n.className,g=n.style,u=Object(o["useContext"])(s["ConfigContext"]),b=u.getPrefixCls,f=b("pro-core-field-label"),C=(n,e)=>{if(e&&(!Array.isArray(e)||e.length)){var t=Array.isArray(e)?e.join(","):e,r=n?l.a.createElement(l.a.Fragment,null,n,": "):"";if(!c)return l.a.createElement("span",null,r,t);var a=t.length>16?"...".concat(Array.isArray(e)&&e.length>1?"".concat(e.length,"\u9879"):""):"";return l.a.createElement("span",{title:t},r,t.substr(0,16),a)}return p||n};return l.a.createElement("span",{className:S()(f,"".concat(f,"-").concat(i),{["".concat(f,"-active")]:!!r,["".concat(f,"-disabled")]:d},m),style:g},C(e,r),r&&l.a.createElement(y["a"],{className:S()("".concat(f,"-icon"),"".concat(f,"-close")),onClick:n=>{t&&!d&&t(),n.stopPropagation()}}),l.a.createElement(x["a"],{className:S()("".concat(f,"-icon"),"".concat(f,"-arrow"))}))}),P=v,k=t("Pp2B");function R(n){return/\w.(png|jpg|jpeg|svg|webp|gif|bmp)$/i.test(n)}var N=R,w=/(((^https?:(?:\/\/)?)(?:[-;:&=\+\$,\w]+@)?[A-Za-z0-9.-]+(?::\d+)?|(?:www.|[-;:&=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]*)?\??(?:[-\+=&;%@.\w_]*)#?(?:[\w]*))?)$/,E=n=>w.test(n),$=E,z="valueType request plain renderFormItem render text formItemProps valueEnum",B="fieldProps isDefaultDom secondary colSize groupProps contentRender submitterProps submitter";function j(n){var e="".concat(z," ").concat(B).split(/[\s\n]+/),t={};return Object.keys(n||{}).forEach(r=>{e.includes(r)||(t[r]=n[r])}),t}var T=n=>{var e={};return Object.keys(n).forEach(t=>{void 0!==n[t]&&(e[t]=n[t])}),e},A=T,G=n=>{var e={};return Object.keys(n).forEach(t=>{var r;void 0!==n[t]&&0!==(null===(r=n[t])||void 0===r?void 0:r.length)&&(e[t]=n[t])}),e},O=G,L=(n,e)=>{var t=Object(o["useRef"])(!1);Object(o["useEffect"])(()=>t.current?n():(t.current=!0,()=>{}),e)};function M(n,e,t){var r=Array.isArray(e)?e:[],a="number"===typeof e?e:t||0,l=Object(o["useRef"])(),i=Object(o["useRef"])(n);i.current=n;var s=Object(o["useCallback"])(()=>{l.current&&clearTimeout(l.current)},[]),d=Object(o["useCallback"])((function(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];s(),l.current=setTimeout(()=>{i.current(...e)},a)}),[a,s]);return L(()=>(d(),s),[...r,d]),Object(o["useEffect"])(()=>s,[]),{run:d,cancel:s}}var I=M,D=n=>{var e=Object(o["useRef"])();return Object(o["useEffect"])(()=>{e.current=n}),e.current},F=D,Y=t("wd/R"),V=t.n(Y),K={time:"HH:mm:ss",timeRange:"HH:mm:ss",date:"YYYY-MM-DD",dateRange:"YYYY-MM-DD",dateTime:"YYYY-MM-DD HH:mm:ss",dateTimeRange:"YYYY-MM-DD HH:mm:ss"},q=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"dateTime";return e?V.a.isMoment(n)&&!Array.isArray(n)?"number"===e?n.valueOf():n.format(K[t]||"YYYY-MM-DD HH:mm:ss"):Array.isArray(n)?n.map(n=>V.a.isMoment(n)?"number"===e?n.valueOf():n.format(K[t]||"YYYY-MM-DD HH:mm:ss"):n):n:n},_=(n,e,t)=>{var r={};return Object.keys(n).forEach(a=>{var o=t[a]||"text",l=n[a];l&&(r[a]=q(l,e,o))}),r},U=_,H=(n,e)=>null===n||void 0===n?n:Array.isArray(n)?n.map(n=>H(n,e)):V.a.isMoment(n)?n:V()(n,e),J=H,Q=t("XaGS"),Z=t.n(Q);function W(n,e){return Z()(n,e)}function X(n){var e=Object(o["useRef"])();return W(n,e.current)||(e.current=n),e.current}function nn(n,e){Object(o["useEffect"])(n,X(e))}var en=nn;function tn(n,e){var t="string"===typeof n.pageName?n.title:e;Object(o["useEffect"])(()=>{Object(k["a"])()&&t&&(document.title=t)},[n.title])}var rn=tn;t("troW")},ADUK:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(o["a"],{split:"vertical",bordered:!0,headerBordered:!0},a.a.createElement(o["a"],{title:"\u5de6\u4fa7\u8be6\u60c5",colSpan:"30%"},"\u5de6\u4fa7\u5185\u5bb9"),a.a.createElement(o["a"],{title:"\u5de6\u53f3\u5206\u680f\u5b50\u5361\u7247\u5e26\u6807\u9898",headerBordered:!0},a.a.createElement("div",{style:{height:360}},"\u53f3\u4fa7\u5185\u5bb9")))},FJo9:function(n,e,t){"use strict";t("cIOH"),t("8txm"),t("MXD1")},FlLn:function(n,e,t){"use strict";var r=t("k1fw"),a=t("tJVT"),o=(t("1GLa"),t("TLLU")),l=t("q1tI"),i=t.n(l),s=t("SqFR"),d=t("UESt"),c=t("kZ8M"),p=t.n(c),m=t("9p94"),g=t("TSYQ"),u=t.n(g),b=(t("14J3"),t("BMrR")),f=(t("jCWc"),t("kPKH")),C=(t("O+mO"),n=>{var e=n.style,t=n.prefix;return i.a.createElement("div",{className:"".concat(t,"-loading-content"),style:e},i.a.createElement(b["a"],{gutter:8},i.a.createElement(f["a"],{span:22},i.a.createElement("div",{className:"".concat(t,"-loading-block")}))),i.a.createElement(b["a"],{gutter:8},i.a.createElement(f["a"],{span:8},i.a.createElement("div",{className:"".concat(t,"-loading-block")})),i.a.createElement(f["a"],{span:15},i.a.createElement("div",{className:"".concat(t,"-loading-block")}))),i.a.createElement(b["a"],{gutter:8},i.a.createElement(f["a"],{span:6},i.a.createElement("div",{className:"".concat(t,"-loading-block")})),i.a.createElement(f["a"],{span:18},i.a.createElement("div",{className:"".concat(t,"-loading-block")}))),i.a.createElement(b["a"],{gutter:8},i.a.createElement(f["a"],{span:13},i.a.createElement("div",{className:"".concat(t,"-loading-block")})),i.a.createElement(f["a"],{span:9},i.a.createElement("div",{className:"".concat(t,"-loading-block")}))),i.a.createElement(b["a"],{gutter:8},i.a.createElement(f["a"],{span:4},i.a.createElement("div",{className:"".concat(t,"-loading-block")})),i.a.createElement(f["a"],{span:3},i.a.createElement("div",{className:"".concat(t,"-loading-block")})),i.a.createElement(f["a"],{span:16},i.a.createElement("div",{className:"".concat(t,"-loading-block")}))))}),y=C,x=o["a"].useBreakpoint,h=n=>{var e=n.className,t=n.style,o=n.bodyStyle,l=void 0===o?{}:o,c=n.headStyle,g=void 0===c?{}:c,b=n.title,f=n.extra,C=n.tip,h=n.layout,S=n.loading,v=n.colSpan,P=n.gutter,k=void 0===P?0:P,R=n.split,N=n.headerBordered,w=void 0!==N&&N,E=n.bordered,$=void 0!==E&&E,z=n.children,B=n.ghost,j=void 0!==B&&B,T=n.collapsed,A=n.collapsible,G=void 0!==A&&A,O=n.defaultCollapsed,L=void 0!==O&&O,M=n.onCollapse,I=x(),D=p()(L,{value:T,onChange:M}),F=Object(a["a"])(D,2),Y=F[0],V=F[1],K=["xxl","xl","lg","md","sm","xs"],q=n=>{var e=[0,0],t=Array.isArray(n)?n:[n,0];return t.forEach((n,t)=>{if("object"===typeof n)for(var r=0;r<K.length;r+=1){var a=K[r];if(I[a]&&void 0!==n[a]){e[t]=n[a];break}}else e[t]=n||0}),e},_=(n,e)=>n?e:{};return i.a.createElement(s["ConfigConsumer"],null,n=>{var a,o=n.getPrefixCls,s=o("pro-card"),c=q(k),p=i.a.Children.toArray(z),x=p.map((n,e)=>{var t;if(null===n||void 0===n||null===(t=n.type)||void 0===t?void 0:t.isProCard){a=!0;var o=_(c[0]>0&&e!==p.length-1,{marginRight:c[0]}),l=_(c[1]>0,{marginBottom:c[1]}),d=_("vertical"===R||"horizontal"===R,{borderRadius:0});return i.a.cloneElement(n,{className:u()(n.props.className,{["".concat(s,"-split-vertical")]:"vertical"===R&&e!==p.length-1,["".concat(s,"-split-horizontal")]:"horizontal"===R&&e!==p.length-1}),style:Object(r["a"])(Object(r["a"])(Object(r["a"])(Object(r["a"])({},o),l),d),n.props.style)})}return n}),P=v;if("object"===typeof v)for(var N=0;N<K.length;N+=1){var E=K[N];if(I[E]&&void 0!==v[E]){P=v[E];break}}var B=_("string"===typeof P&&/\d%|\dpx/i.test(P),{width:P,flexShrink:0}),A=Object(r["a"])(Object(r["a"])({},B),t),O=u()("".concat(s),e,{["".concat(s,"-span-").concat(P)]:"number"===typeof P&&P>0&&P<=24,["".concat(s,"-border")]:$,["".concat(s,"-contain-card")]:a,["".concat(s,"-loading")]:S,["".concat(s,"-split")]:"vertical"===R||"horizontal"===R,["".concat(s,"-ghost")]:j}),L=u()("".concat(s,"-header"),{["".concat(s,"-header-border")]:w,["".concat(s,"-header-collapse")]:Y}),M=u()("".concat(s,"-body"),{["".concat(s,"-body-center")]:"center"===h,["".concat(s,"-body-column")]:"horizontal"===R,["".concat(s,"-body-collapse")]:Y,["".concat(s,"-body-ghost")]:j}),D=0===l.padding||"0px"===l.padding?{padding:24}:void 0,F=i.a.isValidElement(S)?S:i.a.createElement(y,{prefix:s,style:D}),U=G&&void 0===T&&i.a.createElement(d["a"],{rotate:Y?void 0:90,className:"".concat(s,"-collapsible-icon"),onClick:()=>{V(!Y)}});return i.a.createElement("div",{className:O,style:A},(b||f||U)&&i.a.createElement("div",{className:L,style:g},i.a.createElement("div",{className:"".concat(s,"-title")},i.a.createElement(m["c"],{label:b,tip:C}),U),i.a.createElement("div",{className:"".concat(s,"-extra")},f)),i.a.createElement("div",{className:M,style:l},S?F:x))})};h.isProCard=!0;e["a"]=h},"K+nK":function(n,e){function t(n){return n&&n.__esModule?n:{default:n}}n.exports=t},L41K:function(n,e,t){"use strict";t.d(e,"a",(function(){return _}));var r=t("pVnL"),a=t.n(r),o=t("lSNA"),l=t.n(o),i=t("lwsE"),s=t.n(i),d=t("W8MJ"),c=t.n(d),p=t("7W2i"),m=t.n(p),g=t("LQ03"),u=t.n(g),b=t("q1tI"),f=t.n(b),C=t("BGR+"),y=t("rePB"),x=t("Ff2n"),h=t("1OyB"),S=t("vuIU"),v=t("Ji7U"),P=t("md7G"),k=t("foSv"),R=t("Zm9Q"),N=t("TSYQ"),w=t.n(N);function E(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function $(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?E(Object(t),!0).forEach((function(e){Object(y["a"])(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):E(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function z(n){var e=B();return function(){var t,r=Object(k["a"])(n);if(e){var a=Object(k["a"])(this).constructor;t=Reflect.construct(r,arguments,a)}else t=r.apply(this,arguments);return Object(P["a"])(this,t)}}function B(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}function j(n){return"string"===typeof n}var T=function(n){Object(v["a"])(t,n);var e=z(t);function t(){var n;return Object(h["a"])(this,t),n=e.apply(this,arguments),n.onClick=function(){var e=n.props,t=e.onClick,r=e.onStepClick,a=e.stepIndex;t&&t.apply(void 0,arguments),r(a)},n}return Object(S["a"])(t,[{key:"renderIconNode",value:function(){var n,e,t=this.props,r=t.prefixCls,a=t.progressDot,o=t.stepIcon,l=t.stepNumber,i=t.status,s=t.title,d=t.description,c=t.icon,p=t.iconPrefix,m=t.icons,g=w()("".concat(r,"-icon"),"".concat(p,"icon"),(n={},Object(y["a"])(n,"".concat(p,"icon-").concat(c),c&&j(c)),Object(y["a"])(n,"".concat(p,"icon-check"),!c&&"finish"===i&&(m&&!m.finish||!m)),Object(y["a"])(n,"".concat(p,"icon-cross"),!c&&"error"===i&&(m&&!m.error||!m)),n)),u=f.a.createElement("span",{className:"".concat(r,"-icon-dot")});return e=a?"function"===typeof a?f.a.createElement("span",{className:"".concat(r,"-icon")},a(u,{index:l-1,status:i,title:s,description:d})):f.a.createElement("span",{className:"".concat(r,"-icon")},u):c&&!j(c)?f.a.createElement("span",{className:"".concat(r,"-icon")},c):m&&m.finish&&"finish"===i?f.a.createElement("span",{className:"".concat(r,"-icon")},m.finish):m&&m.error&&"error"===i?f.a.createElement("span",{className:"".concat(r,"-icon")},m.error):c||"finish"===i||"error"===i?f.a.createElement("span",{className:g}):f.a.createElement("span",{className:"".concat(r,"-icon")},l),o&&(e=o({index:l-1,status:i,title:s,description:d,node:e})),e}},{key:"render",value:function(){var n,e=this.props,t=e.className,r=e.prefixCls,a=e.style,o=e.active,l=e.status,i=void 0===l?"wait":l,s=(e.iconPrefix,e.icon),d=(e.wrapperStyle,e.stepNumber,e.disabled),c=e.description,p=e.title,m=e.subTitle,g=(e.progressDot,e.stepIcon,e.tailContent),u=(e.icons,e.stepIndex,e.onStepClick),b=e.onClick,C=Object(x["a"])(e,["className","prefixCls","style","active","status","iconPrefix","icon","wrapperStyle","stepNumber","disabled","description","title","subTitle","progressDot","stepIcon","tailContent","icons","stepIndex","onStepClick","onClick"]),h=w()("".concat(r,"-item"),"".concat(r,"-item-").concat(i),t,(n={},Object(y["a"])(n,"".concat(r,"-item-custom"),s),Object(y["a"])(n,"".concat(r,"-item-active"),o),Object(y["a"])(n,"".concat(r,"-item-disabled"),!0===d),n)),S=$({},a),v={};return u&&!d&&(v.role="button",v.tabIndex=0,v.onClick=this.onClick),f.a.createElement("div",Object.assign({},C,{className:h,style:S}),f.a.createElement("div",Object.assign({onClick:b},v,{className:"".concat(r,"-item-container")}),f.a.createElement("div",{className:"".concat(r,"-item-tail")},g),f.a.createElement("div",{className:"".concat(r,"-item-icon")},this.renderIconNode()),f.a.createElement("div",{className:"".concat(r,"-item-content")},f.a.createElement("div",{className:"".concat(r,"-item-title")},p,m&&f.a.createElement("div",{title:"string"===typeof m?m:void 0,className:"".concat(r,"-item-subtitle")},m)),c&&f.a.createElement("div",{className:"".concat(r,"-item-description")},c))))}}]),t}(f.a.Component);function A(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function G(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?A(Object(t),!0).forEach((function(e){Object(y["a"])(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):A(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function O(n){var e=L();return function(){var t,r=Object(k["a"])(n);if(e){var a=Object(k["a"])(this).constructor;t=Reflect.construct(r,arguments,a)}else t=r.apply(this,arguments);return Object(P["a"])(this,t)}}function L(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}var M=function(n){Object(v["a"])(t,n);var e=O(t);function t(){var n;return Object(h["a"])(this,t),n=e.apply(this,arguments),n.onStepClick=function(e){var t=n.props,r=t.onChange,a=t.current;r&&a!==e&&r(e)},n}return Object(S["a"])(t,[{key:"render",value:function(){var n,e=this,t=this.props,r=t.prefixCls,a=t.style,o=void 0===a?{}:a,l=t.className,i=t.children,s=t.direction,d=t.type,c=t.labelPlacement,p=t.iconPrefix,m=t.status,g=t.size,u=t.current,C=t.progressDot,h=t.stepIcon,S=t.initial,v=t.icons,P=t.onChange,k=Object(x["a"])(t,["prefixCls","style","className","children","direction","type","labelPlacement","iconPrefix","status","size","current","progressDot","stepIcon","initial","icons","onChange"]),N="navigation"===d,E=C?"vertical":c,$=w()(r,"".concat(r,"-").concat(s),l,(n={},Object(y["a"])(n,"".concat(r,"-").concat(g),g),Object(y["a"])(n,"".concat(r,"-label-").concat(E),"horizontal"===s),Object(y["a"])(n,"".concat(r,"-dot"),!!C),Object(y["a"])(n,"".concat(r,"-navigation"),N),n));return f.a.createElement("div",Object.assign({className:$,style:o},k),Object(R["a"])(i).map((function(n,t){var a=S+t,l=G({stepNumber:"".concat(a+1),stepIndex:a,key:a,prefixCls:r,iconPrefix:p,wrapperStyle:o,progressDot:C,stepIcon:h,icons:v,onStepClick:P&&e.onStepClick},n.props);return"error"===m&&t===u-1&&(l.className="".concat(r,"-next-error")),n.props.status||(l.status=a===u?m:a<u?"finish":"wait"),l.active=a===u,Object(b["cloneElement"])(n,l)})))}}]),t}(f.a.Component);M.Step=T,M.defaultProps={type:"default",prefixCls:"rc-steps",iconPrefix:"rc",direction:"horizontal",labelPlacement:"horizontal",initial:0,current:0,status:"process",size:"",progressDot:!1};var I=M,D=t("NAnI"),F=t.n(D),Y=t("V/uB"),V=t.n(Y),K=t("H84U"),q=t("CFYs"),_=function(n){m()(t,n);var e=u()(t);function t(){var n;return s()(this,t),n=e.apply(this,arguments),n.renderSteps=function(e){var t=e.getPrefixCls,r=e.direction,o=t("steps",n.props.prefixCls),i=t("",n.props.iconPrefix),s=n.props,d=s.percent,c=s.size,p=w()(n.props.className,l()({},"".concat(o,"-rtl"),"rtl"===r)),m={finish:b["createElement"](F.a,{className:"".concat(o,"-finish-icon")}),error:b["createElement"](V.a,{className:"".concat(o,"-error-icon")})},g=function(n){var e=n.node,t=n.status;if("process"===t&&void 0!==d){var r="small"===c?32:40,a=b["createElement"]("div",{className:"".concat(o,"-progress-icon")},b["createElement"](q["a"],{type:"circle",percent:d,width:r,strokeWidth:4,format:function(){return null}}),e);return a}return e};return b["createElement"](I,a()({icons:m},Object(C["a"])(n.props,["progress"]),{stepIcon:g,prefixCls:o,iconPrefix:i,className:p}))},n}return c()(t,[{key:"render",value:function(){return b["createElement"](K["a"],null,this.renderSteps)}}]),t}(b["Component"]);_.Step=I.Step,_.defaultProps={current:0}},"N/aZ":function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(o["a"],{title:"\u6807\u9898",extra:"extra",tip:"\u8fd9\u662f\u63d0\u793a",style:{width:300},headerBordered:!0},"\u5185\u5bb9")},NAnI:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=a(t("wXyp"));function a(n){return n&&n.__esModule?n:{default:n}}var o=r;e.default=o,n.exports=o},"O+mO":function(n,e,t){},PZoR:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(o["a"],{title:"\u6807\u9898",extra:"extra",layout:"center",style:{width:300}},"\u5185\u5bb9\u5782\u76f4\u5c45\u4e2d")},Pp2B:function(n,e,t){"use strict";(function(n){var t="undefined"!==typeof n&&null!=n.versions&&null!=n.versions.node,r=()=>"undefined"!==typeof window&&"undefined"!==typeof window.document&&!t;e["a"]=r}).call(this,t("Q2Ig"))},RUY5:function(n,e,t){},RnhZ:function(n,e,t){var r={"./af":"K/tc","./af.js":"K/tc","./ar":"jnO4","./ar-dz":"o1bE","./ar-dz.js":"o1bE","./ar-kw":"Qj4J","./ar-kw.js":"Qj4J","./ar-ly":"HP3h","./ar-ly.js":"HP3h","./ar-ma":"CoRJ","./ar-ma.js":"CoRJ","./ar-sa":"gjCT","./ar-sa.js":"gjCT","./ar-tn":"bYM6","./ar-tn.js":"bYM6","./ar.js":"jnO4","./az":"SFxW","./az.js":"SFxW","./be":"H8ED","./be.js":"H8ED","./bg":"hKrs","./bg.js":"hKrs","./bm":"p/rL","./bm.js":"p/rL","./bn":"kEOa","./bn.js":"kEOa","./bo":"0mo+","./bo.js":"0mo+","./br":"aIdf","./br.js":"aIdf","./bs":"JVSJ","./bs.js":"JVSJ","./ca":"1xZ4","./ca.js":"1xZ4","./cs":"PA2r","./cs.js":"PA2r","./cv":"A+xa","./cv.js":"A+xa","./cy":"l5ep","./cy.js":"l5ep","./da":"DxQv","./da.js":"DxQv","./de":"tGlX","./de-at":"s+uk","./de-at.js":"s+uk","./de-ch":"u3GI","./de-ch.js":"u3GI","./de.js":"tGlX","./dv":"WYrj","./dv.js":"WYrj","./el":"jUeY","./el.js":"jUeY","./en-au":"Dmvi","./en-au.js":"Dmvi","./en-ca":"OIYi","./en-ca.js":"OIYi","./en-gb":"Oaa7","./en-gb.js":"Oaa7","./en-ie":"4dOw","./en-ie.js":"4dOw","./en-il":"czMo","./en-il.js":"czMo","./en-in":"7C5Q","./en-in.js":"7C5Q","./en-nz":"b1Dy","./en-nz.js":"b1Dy","./en-sg":"t+mt","./en-sg.js":"t+mt","./eo":"Zduo","./eo.js":"Zduo","./es":"iYuL","./es-do":"CjzT","./es-do.js":"CjzT","./es-us":"Vclq","./es-us.js":"Vclq","./es.js":"iYuL","./et":"7BjC","./et.js":"7BjC","./eu":"D/JM","./eu.js":"D/JM","./fa":"jfSC","./fa.js":"jfSC","./fi":"gekB","./fi.js":"gekB","./fil":"1ppg","./fil.js":"1ppg","./fo":"ByF4","./fo.js":"ByF4","./fr":"nyYc","./fr-ca":"2fjn","./fr-ca.js":"2fjn","./fr-ch":"Dkky","./fr-ch.js":"Dkky","./fr.js":"nyYc","./fy":"cRix","./fy.js":"cRix","./ga":"USCx","./ga.js":"USCx","./gd":"9rRi","./gd.js":"9rRi","./gl":"iEDd","./gl.js":"iEDd","./gom-deva":"qvJo","./gom-deva.js":"qvJo","./gom-latn":"DKr+","./gom-latn.js":"DKr+","./gu":"4MV3","./gu.js":"4MV3","./he":"x6pH","./he.js":"x6pH","./hi":"3E1r","./hi.js":"3E1r","./hr":"S6ln","./hr.js":"S6ln","./hu":"WxRl","./hu.js":"WxRl","./hy-am":"1rYy","./hy-am.js":"1rYy","./id":"UDhR","./id.js":"UDhR","./is":"BVg3","./is.js":"BVg3","./it":"bpih","./it-ch":"bxKX","./it-ch.js":"bxKX","./it.js":"bpih","./ja":"B55N","./ja.js":"B55N","./jv":"tUCv","./jv.js":"tUCv","./ka":"IBtZ","./ka.js":"IBtZ","./kk":"bXm7","./kk.js":"bXm7","./km":"6B0Y","./km.js":"6B0Y","./kn":"PpIw","./kn.js":"PpIw","./ko":"Ivi+","./ko.js":"Ivi+","./ku":"JCF/","./ku.js":"JCF/","./ky":"lgnt","./ky.js":"lgnt","./lb":"RAwQ","./lb.js":"RAwQ","./lo":"sp3z","./lo.js":"sp3z","./lt":"JvlW","./lt.js":"JvlW","./lv":"uXwI","./lv.js":"uXwI","./me":"KTz0","./me.js":"KTz0","./mi":"aIsn","./mi.js":"aIsn","./mk":"aQkU","./mk.js":"aQkU","./ml":"AvvY","./ml.js":"AvvY","./mn":"lYtQ","./mn.js":"lYtQ","./mr":"Ob0Z","./mr.js":"Ob0Z","./ms":"6+QB","./ms-my":"ZAMP","./ms-my.js":"ZAMP","./ms.js":"6+QB","./mt":"G0Uy","./mt.js":"G0Uy","./my":"honF","./my.js":"honF","./nb":"bOMt","./nb.js":"bOMt","./ne":"OjkT","./ne.js":"OjkT","./nl":"+s0g","./nl-be":"2ykv","./nl-be.js":"2ykv","./nl.js":"+s0g","./nn":"uEye","./nn.js":"uEye","./oc-lnc":"Fnuy","./oc-lnc.js":"Fnuy","./pa-in":"8/+R","./pa-in.js":"8/+R","./pl":"jVdC","./pl.js":"jVdC","./pt":"8mBD","./pt-br":"0tRk","./pt-br.js":"0tRk","./pt.js":"8mBD","./ro":"lyxo","./ro.js":"lyxo","./ru":"lXzo","./ru.js":"lXzo","./sd":"Z4QM","./sd.js":"Z4QM","./se":"//9w","./se.js":"//9w","./si":"7aV9","./si.js":"7aV9","./sk":"e+ae","./sk.js":"e+ae","./sl":"gVVK","./sl.js":"gVVK","./sq":"yPMs","./sq.js":"yPMs","./sr":"zx6S","./sr-cyrl":"E+lV","./sr-cyrl.js":"E+lV","./sr.js":"zx6S","./ss":"Ur1D","./ss.js":"Ur1D","./sv":"X709","./sv.js":"X709","./sw":"dNwA","./sw.js":"dNwA","./ta":"PeUW","./ta.js":"PeUW","./te":"XLvN","./te.js":"XLvN","./tet":"V2x9","./tet.js":"V2x9","./tg":"Oxv6","./tg.js":"Oxv6","./th":"EOgW","./th.js":"EOgW","./tk":"Wv91","./tk.js":"Wv91","./tl-ph":"Dzi0","./tl-ph.js":"Dzi0","./tlh":"z3Vd","./tlh.js":"z3Vd","./tr":"DoHr","./tr.js":"DoHr","./tzl":"z1FC","./tzl.js":"z1FC","./tzm":"wQk9","./tzm-latn":"tT3J","./tzm-latn.js":"tT3J","./tzm.js":"wQk9","./ug-cn":"YRex","./ug-cn.js":"YRex","./uk":"raLr","./uk.js":"raLr","./ur":"UpQW","./ur.js":"UpQW","./uz":"Loxo","./uz-latn":"AQ68","./uz-latn.js":"AQ68","./uz.js":"Loxo","./vi":"KSF8","./vi.js":"KSF8","./x-pseudo":"/X5v","./x-pseudo.js":"/X5v","./yo":"fzPg","./yo.js":"fzPg","./zh-cn":"XDpg","./zh-cn.js":"XDpg","./zh-hk":"SatO","./zh-hk.js":"SatO","./zh-mo":"OmwH","./zh-mo.js":"OmwH","./zh-tw":"kOpN","./zh-tw.js":"kOpN"};function a(n){var e=o(n);return t(e)}function o(n){if(!t.o(r,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return r[n]}a.keys=function(){return Object.keys(r)},a.resolve=o,n.exports=a,a.id="RnhZ"},TLLU:function(n,e,t){"use strict";var r=t("5OYt");e["a"]={useBreakpoint:r["a"]}},UESt:function(n,e,t){"use strict";var r=t("q1tI"),a={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"}}]},name:"right",theme:"outlined"},o=a,l=t("6VBw"),i=function(n,e){return r["createElement"](l["a"],Object.assign({},n,{ref:e,icon:o}))};i.displayName="RightOutlined";e["a"]=r["forwardRef"](i)},Uzcg:function(n,e,t){},VVSb:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(a.a.Fragment,null,a.a.createElement(o["a"],{style:{marginTop:8},gutter:8,title:"24\u6805\u683c"},a.a.createElement(o["a"],{colSpan:{xs:2,sm:4,md:6,lg:8,xl:10},layout:"center",bordered:!0},"Col"),a.a.createElement(o["a"],{colSpan:{xs:20,sm:16,md:12,lg:8,xl:4},layout:"center",bordered:!0},"Col"),a.a.createElement(o["a"],{colSpan:{xs:2,sm:4,md:6,lg:8,xl:10},layout:"center",bordered:!0},"Col")),a.a.createElement(o["a"],{style:{marginTop:8},gutter:8,title:"\u6307\u5b9a\u5bbd\u5ea6px"},a.a.createElement(o["a"],{colSpan:{xs:"50px",sm:"100px",md:"200px",lg:"300px",xl:"400px"},layout:"center",bordered:!0},"Col"),a.a.createElement(o["a"],{layout:"center",bordered:!0},"Auto")),a.a.createElement(o["a"],{style:{marginTop:8},gutter:8,title:"\u6307\u5b9a\u5bbd\u5ea6\u767e\u5206\u6bd4"},a.a.createElement(o["a"],{layout:"center",bordered:!0},"Auto"),a.a.createElement(o["a"],{layout:"center",colSpan:{xs:"10%",sm:"20%",md:"30%",lg:"40%",xl:"50%"},bordered:!0},"Col - \u767e\u5206\u6bd4")))},Y9lj:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(o["a"],{title:"\u590d\u6742\u5207\u5206",extra:"2019\u5e749\u670828\u65e5",split:"vertical",bordered:!0,headerBordered:!0},a.a.createElement(o["a"],{split:"horizontal"},a.a.createElement(o["a"],{split:"horizontal"},a.a.createElement(o["a"],{split:"vertical"},a.a.createElement(o["a"],{title:"\u6628\u65e5\u5168\u90e8\u6d41\u91cf"},"123"),a.a.createElement(o["a"],{title:"\u672c\u6708\u7d2f\u8ba1\u6d41\u91cf"},"234"),a.a.createElement(o["a"],{title:"\u4eca\u5e74\u7d2f\u8ba1\u6d41\u91cf"},"345")),a.a.createElement(o["a"],{split:"vertical"},a.a.createElement(o["a"],{title:"\u8fd0\u884c\u4e2d\u8bd5\u9a8c"},"12/56"),a.a.createElement(o["a"],{title:"\u5386\u53f2\u8bd5\u9a8c\u603b\u6570"},"134 \u4e2a"))),a.a.createElement(o["a"],{title:"\u6d41\u91cf\u8d8b\u52bf"},a.a.createElement("div",null,"\u56fe\u8868"),a.a.createElement("div",null,"\u56fe\u8868"),a.a.createElement("div",null,"\u56fe\u8868"),a.a.createElement("div",null,"\u56fe\u8868"),a.a.createElement("div",null,"\u56fe\u8868"))),a.a.createElement(o["a"],{title:"\u6d41\u91cf\u5360\u7528\u60c5\u51b5"},"\u53f3\u4fa7\u5185\u5bb9"))},YbCZ:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(o["a"],{title:"\u6807\u9898",extra:"extra",tip:"\u8fd9\u662f\u63d0\u793a",style:{width:300}},"\u5185\u5bb9")},e4px:function(n,e,t){},gwwD:function(n,e,t){"use strict";t.r(e);t("DYRE");var r=t("zeV3"),a=(t("+L6B"),t("2/Rp")),o=t("tJVT"),l=(t("FJo9"),t("L41K")),i=t("q1tI"),s=t.n(i),d=t("FlLn"),c=l["a"].Step;e["default"]=()=>{var n=Object(i["useState"])(0),e=Object(o["a"])(n,2),t=e[0],p=e[1];return s.a.createElement(d["a"],{split:"vertical",bordered:!0},s.a.createElement(d["a"],{colSpan:"25%"},s.a.createElement(l["a"],{direction:"vertical",size:"small",current:t,style:{height:320}},s.a.createElement(c,{title:"\u586b\u5199\u57fa\u672c\u4fe1\u606f"}),s.a.createElement(c,{title:"\u914d\u7f6e\u6a21\u677f"}),s.a.createElement(c,{title:"\u914d\u7f6e\u8bbf\u95ee"}),s.a.createElement(c,{title:"\u914d\u7f6e\u90e8\u7f72\u548c\u8c03\u5ea6"}),s.a.createElement(c,{title:"\u9884\u89c8"}))),s.a.createElement(d["a"],{title:"\u6d41\u91cf\u5360\u7528\u60c5\u51b5"},s.a.createElement(r["a"],null,s.a.createElement(a["a"],{type:"primary",onClick:()=>p(t+1),disabled:5===t},"\u4e0b\u4e00\u6b65"),s.a.createElement(a["a"],{onClick:()=>p(t-1),disabled:0===t},"\u4e0a\u4e00\u6b65"))))}},iFEz:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(a.a.Fragment,null,a.a.createElement(o["a"],{loading:!0,style:{width:300}},"\u5185\u5bb9"),a.a.createElement(o["a"],{title:"\u81ea\u5b9a\u4e49 Loading",extra:"extra",loading:a.a.createElement("div",null,"\u52a0\u8f7d\u4e2d"),style:{width:300,marginTop:16}},"\u5185\u5bb9"))},kZ8M:function(n,e,t){"use strict";function r(n){return r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=g;var a=l(t("q1tI"));function o(){if("function"!==typeof WeakMap)return null;var n=new WeakMap;return o=function(){return n},n}function l(n){if(n&&n.__esModule)return n;if(null===n||"object"!==r(n)&&"function"!==typeof n)return{default:n};var e=o();if(e&&e.has(n))return e.get(n);var t={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in n)if(Object.prototype.hasOwnProperty.call(n,l)){var i=a?Object.getOwnPropertyDescriptor(n,l):null;i&&(i.get||i.set)?Object.defineProperty(t,l,i):t[l]=n[l]}return t.default=n,e&&e.set(n,t),t}function i(n,e){return m(n)||p(n,e)||d(n,e)||s()}function s(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function d(n,e){if(n){if("string"===typeof n)return c(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?c(n,e):void 0}}function c(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function p(n,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,a=!1,o=void 0;try{for(var l,i=n[Symbol.iterator]();!(r=(l=i.next()).done);r=!0)if(t.push(l.value),e&&t.length===e)break}catch(s){a=!0,o=s}finally{try{r||null==i["return"]||i["return"]()}finally{if(a)throw o}}return t}}function m(n){if(Array.isArray(n))return n}function g(n,e){var t=e||{},r=t.defaultValue,o=t.value,l=t.onChange,s=t.postState,d=a.useState((function(){return void 0!==o?o:void 0!==r?"function"===typeof r?r():r:"function"===typeof n?n():n})),c=i(d,2),p=c[0],m=c[1],g=void 0!==o?o:p;function u(n){m(n),g!==n&&l&&l(n,g)}s&&(g=s(g));var b=a.useRef(!0);return a.useEffect((function(){b.current?b.current=!1:void 0===o&&m(o)}),[o]),[g,u]}},m9pF:function(n,e,t){"use strict";t.r(e);var r=t("0Owb"),a=t("q1tI"),o=t.n(a),l=(t("B2uJ"),t("+su7"),t("qOys"),t("5Yjd")),i=t.n(l),s=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("YbCZ")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),d=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("1ztH")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),c=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("VVSb")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),p=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("69Bc")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),m=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("ADUK")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),g=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("Y9lj")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),u=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("tp7c")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),b=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("N/aZ")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),f=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("nA6F")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),C=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("PZoR")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),y=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("iFEz")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),x=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("zk1z")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),h=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("px/x")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),S=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("wFbQ")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),v=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("gwwD")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)})),P=o.a.memo((function(){var n=t("K+nK"),e=n(t("q1tI")),r=n(t("961H")),a=function(){return e.default.createElement(r.default,null)};return e["default"].createElement(a)}));e["default"]=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h1",{id:"procard-\u6807\u51c6\u5361\u7247"},o.a.createElement("a",{"aria-hidden":"true",href:"#procard-\u6807\u51c6\u5361\u7247"},o.a.createElement("span",{className:"icon icon-link"})),"ProCard \u6807\u51c6\u5361\u7247"),o.a.createElement("p",null,"\u6807\u51c6\u5bb9\u5668\u5361\u7247\uff0c\u63d0\u4f9b\u6807\u51c6\u5361\u7247\u6837\u5f0f\uff0c\u4ee5\u53ca\u6805\u683c\u5e03\u5c40\u80fd\u529b\u3002"),o.a.createElement("h2",{id:"\u4f55\u65f6\u4f7f\u7528"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u4f55\u65f6\u4f7f\u7528"},o.a.createElement("span",{className:"icon icon-link"})),"\u4f55\u65f6\u4f7f\u7528"),o.a.createElement("ul",null,o.a.createElement("li",null,"\u9700\u8981\u4e00\u4e2a\u6807\u51c6\u5361\u7247\u5bb9\u7eb3\u5185\u5bb9\u65f6\u3002"),o.a.createElement("li",null,"\u9700\u8981\u591a\u4e2a\u5361\u7247\u6805\u683c\uff0cgutter \u5e03\u5c40\u65f6\u3002"),o.a.createElement("li",null,"\u9700\u8981\u8fdb\u884c\u5361\u7247\u5185\u5207\u5206\u5e03\u5c40\u65f6\u3002"),o.a.createElement("li",null,"\u9700\u8981\u5361\u7247\u53ef\u6298\u53e0\u65f6\u3002")),o.a.createElement("h2",{id:"\u4ee3\u7801\u6f14\u793a"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u4ee3\u7801\u6f14\u793a"},o.a.createElement("span",{className:"icon icon-link"})),"\u4ee3\u7801\u6f14\u793a"),o.a.createElement("h3",{id:"\u57fa\u7840\u5361\u7247"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u57fa\u7840\u5361\u7247"},o.a.createElement("span",{className:"icon icon-link"})),"\u57fa\u7840\u5361\u7247"),o.a.createElement("p",null,"\u5f53\u5355\u72ec\u4f7f\u7528\u65f6 ",o.a.createElement("code",null,"ProCard")," \u5c31\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5361\u7247\u3002")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => {\n  return (\n    <ProCard title="\u6807\u9898" extra="extra" tip="\u8fd9\u662f\u63d0\u793a" style={{ width: 300 }}>\n      \u5185\u5bb9\n    </ProCard>\n  );\n};\n',jsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => (\n  <ProCard\n    title="\u6807\u9898"\n    extra="extra"\n    tip="\u8fd9\u662f\u63d0\u793a"\n    style={{\n      width: 300,\n    }}\n  >\n    \u5185\u5bb9\n  </ProCard>\n);\n'}},{background:"#f0f2f5",path:"/_demos/basic",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(s,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u6805\u683c\u5e03\u5c40"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u6805\u683c\u5e03\u5c40"},o.a.createElement("span",{className:"icon icon-link"})),"\u6805\u683c\u5e03\u5c40"),o.a.createElement("p",null,"\u5f53\u5d4c\u5957\u5b50\u5361\u7247\u65f6, \u7ec4\u4ef6\u4f1a\u81ea\u52a8\u5207\u6362\u4e3a ",o.a.createElement("code",null,"flex")," \u5f39\u6027\u76d2\u5e03\u5c40\u3002\u4f60\u8fd8\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e ",o.a.createElement("code",null,"ghost")," \u5c5e\u6027\u4e3a ",o.a.createElement("code",null,"true")," \u65b9\u4fbf\u9875\u5185\u5e03\u5c40\u3002")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => {\n  return (\n    <>\n      <ProCard layout="center" bordered>\n        colSpan - 24\n      </ProCard>\n      <ProCard colSpan={12} layout="center" bordered style={{ marginTop: 8 }}>\n        colSpan - 12\n      </ProCard>\n      <ProCard colSpan={8} layout="center" bordered style={{ marginTop: 8 }}>\n        colSpan - 8\n      </ProCard>\n      <ProCard style={{ marginTop: 8 }} gutter={8} title="24\u6805\u683c">\n        <ProCard colSpan={12} layout="center" bordered>\n          colSpan-12\n        </ProCard>\n        <ProCard colSpan={6} layout="center" bordered>\n          colSpan-6\n        </ProCard>\n        <ProCard colSpan={6} layout="center" bordered>\n          colSpan-6\n        </ProCard>\n      </ProCard>\n      <ProCard style={{ marginTop: 8 }} gutter={8} ghost>\n        <ProCard colSpan="200px" layout="center" bordered>\n          colSpan - 200px\n        </ProCard>\n        <ProCard layout="center" bordered>\n          Auto\n        </ProCard>\n      </ProCard>\n      <ProCard style={{ marginTop: 8 }} gutter={8} ghost>\n        <ProCard bordered>Auto</ProCard>\n        <ProCard colSpan="30%" bordered>\n          colSpan - 30%\n        </ProCard>\n      </ProCard>\n    </>\n  );\n};\n',jsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => (\n  <>\n    <ProCard layout="center" bordered>\n      colSpan - 24\n    </ProCard>\n    <ProCard\n      colSpan={12}\n      layout="center"\n      bordered\n      style={{\n        marginTop: 8,\n      }}\n    >\n      colSpan - 12\n    </ProCard>\n    <ProCard\n      colSpan={8}\n      layout="center"\n      bordered\n      style={{\n        marginTop: 8,\n      }}\n    >\n      colSpan - 8\n    </ProCard>\n    <ProCard\n      style={{\n        marginTop: 8,\n      }}\n      gutter={8}\n      title="24\u6805\u683c"\n    >\n      <ProCard colSpan={12} layout="center" bordered>\n        colSpan-12\n      </ProCard>\n      <ProCard colSpan={6} layout="center" bordered>\n        colSpan-6\n      </ProCard>\n      <ProCard colSpan={6} layout="center" bordered>\n        colSpan-6\n      </ProCard>\n    </ProCard>\n    <ProCard\n      style={{\n        marginTop: 8,\n      }}\n      gutter={8}\n      ghost\n    >\n      <ProCard colSpan="200px" layout="center" bordered>\n        colSpan - 200px\n      </ProCard>\n      <ProCard layout="center" bordered>\n        Auto\n      </ProCard>\n    </ProCard>\n    <ProCard\n      style={{\n        marginTop: 8,\n      }}\n      gutter={8}\n      ghost\n    >\n      <ProCard bordered>Auto</ProCard>\n      <ProCard colSpan="30%" bordered>\n        colSpan - 30%\n      </ProCard>\n    </ProCard>\n  </>\n);\n'}},{background:"#f0f2f5",path:"/_demos/colspan",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(d,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u54cd\u5e94\u5f0f"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u54cd\u5e94\u5f0f"},o.a.createElement("span",{className:"icon icon-link"})),"\u54cd\u5e94\u5f0f"),o.a.createElement("p",null,o.a.createElement("code",null,"colSpan")," \u652f\u6301 antd \u5b9a\u4e49\u7684",o.a.createElement("a",{href:"https://ant.design/components/grid-cn/#components-grid-demo-responsive",target:"_blank",rel:"noopener noreferrer"},"\u6805\u683c\u5f0f\u54cd\u5e94\u5e03\u5c40",o.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg","aria-hidden":!0,x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15",className:"__dumi-default-external-link-icon"},o.a.createElement("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),o.a.createElement("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}))),"\u3002\u9884\u8bbe\u516d\u4e2a\u54cd\u5e94\u5c3a\u5bf8\uff1a",o.a.createElement("code",null,"xs")," ",o.a.createElement("code",null,"sm")," ",o.a.createElement("code",null,"md")," ",o.a.createElement("code",null,"lg")," ",o.a.createElement("code",null,"xl")," ",o.a.createElement("code",null,"xxl"),"\u3002\u5982\u679c\u8981\u652f\u6301\u54cd\u5e94\u5f0f\uff0c\u53ef\u4ee5\u5199\u6210 ",o.a.createElement("code",null,"{"," xs: 4, sm: 8, md: 10, lg: 12 ","}"))),o.a.createElement(i.a,Object(r["a"])({source:{tsx:"import React from 'react';\nimport ProCard from '../src/index';\n\nexport default () => {\n  return (\n    <>\n      <ProCard style={{ marginTop: 8 }} gutter={8} title=\"24\u6805\u683c\">\n        <ProCard colSpan={{ xs: 2, sm: 4, md: 6, lg: 8, xl: 10 }} layout=\"center\" bordered>\n          Col\n        </ProCard>\n        <ProCard colSpan={{ xs: 20, sm: 16, md: 12, lg: 8, xl: 4 }} layout=\"center\" bordered>\n          Col\n        </ProCard>\n        <ProCard colSpan={{ xs: 2, sm: 4, md: 6, lg: 8, xl: 10 }} layout=\"center\" bordered>\n          Col\n        </ProCard>\n      </ProCard>\n      <ProCard style={{ marginTop: 8 }} gutter={8} title=\"\u6307\u5b9a\u5bbd\u5ea6px\">\n        <ProCard\n          colSpan={{\n            xs: '50px',\n            sm: '100px',\n            md: '200px',\n            lg: '300px',\n            xl: '400px',\n          }}\n          layout=\"center\"\n          bordered\n        >\n          Col\n        </ProCard>\n        <ProCard layout=\"center\" bordered>\n          Auto\n        </ProCard>\n      </ProCard>\n\n      <ProCard style={{ marginTop: 8 }} gutter={8} title=\"\u6307\u5b9a\u5bbd\u5ea6\u767e\u5206\u6bd4\">\n        <ProCard layout=\"center\" bordered>\n          Auto\n        </ProCard>\n        <ProCard\n          layout=\"center\"\n          colSpan={{\n            xs: '10%',\n            sm: '20%',\n            md: '30%',\n            lg: '40%',\n            xl: '50%',\n          }}\n          bordered\n        >\n          Col - \u767e\u5206\u6bd4\n        </ProCard>\n      </ProCard>\n    </>\n  );\n};\n",jsx:"import React from 'react';\nimport ProCard from '../src/index';\n\nexport default () => (\n  <>\n    <ProCard\n      style={{\n        marginTop: 8,\n      }}\n      gutter={8}\n      title=\"24\u6805\u683c\"\n    >\n      <ProCard\n        colSpan={{\n          xs: 2,\n          sm: 4,\n          md: 6,\n          lg: 8,\n          xl: 10,\n        }}\n        layout=\"center\"\n        bordered\n      >\n        Col\n      </ProCard>\n      <ProCard\n        colSpan={{\n          xs: 20,\n          sm: 16,\n          md: 12,\n          lg: 8,\n          xl: 4,\n        }}\n        layout=\"center\"\n        bordered\n      >\n        Col\n      </ProCard>\n      <ProCard\n        colSpan={{\n          xs: 2,\n          sm: 4,\n          md: 6,\n          lg: 8,\n          xl: 10,\n        }}\n        layout=\"center\"\n        bordered\n      >\n        Col\n      </ProCard>\n    </ProCard>\n    <ProCard\n      style={{\n        marginTop: 8,\n      }}\n      gutter={8}\n      title=\"\u6307\u5b9a\u5bbd\u5ea6px\"\n    >\n      <ProCard\n        colSpan={{\n          xs: '50px',\n          sm: '100px',\n          md: '200px',\n          lg: '300px',\n          xl: '400px',\n        }}\n        layout=\"center\"\n        bordered\n      >\n        Col\n      </ProCard>\n      <ProCard layout=\"center\" bordered>\n        Auto\n      </ProCard>\n    </ProCard>\n\n    <ProCard\n      style={{\n        marginTop: 8,\n      }}\n      gutter={8}\n      title=\"\u6307\u5b9a\u5bbd\u5ea6\u767e\u5206\u6bd4\"\n    >\n      <ProCard layout=\"center\" bordered>\n        Auto\n      </ProCard>\n      <ProCard\n        layout=\"center\"\n        colSpan={{\n          xs: '10%',\n          sm: '20%',\n          md: '30%',\n          lg: '40%',\n          xl: '50%',\n        }}\n        bordered\n      >\n        Col - \u767e\u5206\u6bd4\n      </ProCard>\n    </ProCard>\n  </>\n);\n"}},{background:"#f0f2f5",path:"/_demos/responsive",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(c,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u5361\u7247\u5207\u5206"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u5361\u7247\u5207\u5206"},o.a.createElement("span",{className:"icon icon-link"})),"\u5361\u7247\u5207\u5206"),o.a.createElement("p",null,"\u5e03\u5c40\u6a21\u5f0f\u4e0b\u901a\u8fc7\u914d\u7f6e ",o.a.createElement("code",null,"split")," \u53ef\u4ee5\u65b9\u4fbf\u5730\u5207\u5206\u5361\u7247\uff0c\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u7684\u5206\u680f\uff0c\u4e0d\u7ba1\u662f\u6a2a\u5207\u8fd8\u662f\u7ad6\u5207\u90fd\u975e\u5e38\u4fbf\u5229\uff0c\u5207\u5206\u51fa\u6765\u7684\u5206\u680f\u4ecd\u7136\u4fdd\u6709\u5361\u7247\u7684\u7279\u6027\uff0c\u9ad8\u5ea6\u81ea\u52a8\u6491\u6ee1\u3002\u6ce8\u610f\uff1a"),o.a.createElement("ul",null,o.a.createElement("li",null,"\u5207\u5206\u65f6\u7236\u5361\u7247\u7684\u5185\u5bb9 ",o.a.createElement("code",null,"padding")," \u4f1a\u88ab\u8bbe\u7f6e\u4e3a 0\u3002"),o.a.createElement("li",null,"\u5207\u5206\u65f6\u5b50\u5361\u7247\u7684 ",o.a.createElement("code",null,"border-radius"),"\u4f1a\u88ab\u8bbe\u7f6e\u4e3a 0\u3002"))),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => {\n  return (\n    <ProCard title="\u5de6\u53f3\u5206\u680f\u5e26\u6807\u9898" extra="2019\u5e749\u670828\u65e5" split="vertical" bordered headerBordered>\n      <ProCard title="\u5de6\u4fa7\u8be6\u60c5" colSpan="300px">\n        \u5de6\u4fa7\u5185\u5bb9\n      </ProCard>\n      <ProCard title="\u6d41\u91cf\u5360\u7528\u60c5\u51b5">\n        <div style={{ height: 360 }}>\u53f3\u4fa7\u5185\u5bb9</div>\n      </ProCard>\n    </ProCard>\n  );\n};\n',jsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => (\n  <ProCard title="\u5de6\u53f3\u5206\u680f\u5e26\u6807\u9898" extra="2019\u5e749\u670828\u65e5" split="vertical" bordered headerBordered>\n    <ProCard title="\u5de6\u4fa7\u8be6\u60c5" colSpan="300px">\n      \u5de6\u4fa7\u5185\u5bb9\n    </ProCard>\n    <ProCard title="\u6d41\u91cf\u5360\u7528\u60c5\u51b5">\n      <div\n        style={{\n          height: 360,\n        }}\n      >\n        \u53f3\u4fa7\u5185\u5bb9\n      </div>\n    </ProCard>\n  </ProCard>\n);\n'}},{background:"#f0f2f5",path:"/_demos/split2",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(p,null)),o.a.createElement("div",{className:"markdown"}),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => {\n  return (\n    <ProCard split="vertical" bordered headerBordered>\n      <ProCard title="\u5de6\u4fa7\u8be6\u60c5" colSpan="30%">\n        \u5de6\u4fa7\u5185\u5bb9\n      </ProCard>\n      <ProCard title="\u5de6\u53f3\u5206\u680f\u5b50\u5361\u7247\u5e26\u6807\u9898" headerBordered>\n        <div style={{ height: 360 }}>\u53f3\u4fa7\u5185\u5bb9</div>\n      </ProCard>\n    </ProCard>\n  );\n};\n',jsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => (\n  <ProCard split="vertical" bordered headerBordered>\n    <ProCard title="\u5de6\u4fa7\u8be6\u60c5" colSpan="30%">\n      \u5de6\u4fa7\u5185\u5bb9\n    </ProCard>\n    <ProCard title="\u5de6\u53f3\u5206\u680f\u5b50\u5361\u7247\u5e26\u6807\u9898" headerBordered>\n      <div\n        style={{\n          height: 360,\n        }}\n      >\n        \u53f3\u4fa7\u5185\u5bb9\n      </div>\n    </ProCard>\n  </ProCard>\n);\n'}},{background:"#f0f2f5",path:"/_demos/split23",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(m,null)),o.a.createElement("div",{className:"markdown"}),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => {\n  return (\n    <ProCard title="\u590d\u6742\u5207\u5206" extra="2019\u5e749\u670828\u65e5" split="vertical" bordered headerBordered>\n      <ProCard split="horizontal">\n        <ProCard split="horizontal">\n          <ProCard split="vertical">\n            <ProCard title="\u6628\u65e5\u5168\u90e8\u6d41\u91cf">123</ProCard>\n            <ProCard title="\u672c\u6708\u7d2f\u8ba1\u6d41\u91cf">234</ProCard>\n            <ProCard title="\u4eca\u5e74\u7d2f\u8ba1\u6d41\u91cf">345</ProCard>\n          </ProCard>\n          <ProCard split="vertical">\n            <ProCard title="\u8fd0\u884c\u4e2d\u8bd5\u9a8c">12/56</ProCard>\n            <ProCard title="\u5386\u53f2\u8bd5\u9a8c\u603b\u6570">134 \u4e2a</ProCard>\n          </ProCard>\n        </ProCard>\n        <ProCard title="\u6d41\u91cf\u8d8b\u52bf">\n          <div>\u56fe\u8868</div>\n          <div>\u56fe\u8868</div>\n          <div>\u56fe\u8868</div>\n          <div>\u56fe\u8868</div>\n          <div>\u56fe\u8868</div>\n        </ProCard>\n      </ProCard>\n      <ProCard title="\u6d41\u91cf\u5360\u7528\u60c5\u51b5">\u53f3\u4fa7\u5185\u5bb9</ProCard>\n    </ProCard>\n  );\n};\n',jsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => (\n  <ProCard title="\u590d\u6742\u5207\u5206" extra="2019\u5e749\u670828\u65e5" split="vertical" bordered headerBordered>\n    <ProCard split="horizontal">\n      <ProCard split="horizontal">\n        <ProCard split="vertical">\n          <ProCard title="\u6628\u65e5\u5168\u90e8\u6d41\u91cf">123</ProCard>\n          <ProCard title="\u672c\u6708\u7d2f\u8ba1\u6d41\u91cf">234</ProCard>\n          <ProCard title="\u4eca\u5e74\u7d2f\u8ba1\u6d41\u91cf">345</ProCard>\n        </ProCard>\n        <ProCard split="vertical">\n          <ProCard title="\u8fd0\u884c\u4e2d\u8bd5\u9a8c">12/56</ProCard>\n          <ProCard title="\u5386\u53f2\u8bd5\u9a8c\u603b\u6570">134 \u4e2a</ProCard>\n        </ProCard>\n      </ProCard>\n      <ProCard title="\u6d41\u91cf\u8d8b\u52bf">\n        <div>\u56fe\u8868</div>\n        <div>\u56fe\u8868</div>\n        <div>\u56fe\u8868</div>\n        <div>\u56fe\u8868</div>\n        <div>\u56fe\u8868</div>\n      </ProCard>\n    </ProCard>\n    <ProCard title="\u6d41\u91cf\u5360\u7528\u60c5\u51b5">\u53f3\u4fa7\u5185\u5bb9</ProCard>\n  </ProCard>\n);\n'}},{background:"#f0f2f5",path:"/_demos/split",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(g,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u6805\u683c\u95f4\u9694"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u6805\u683c\u95f4\u9694"},o.a.createElement("span",{className:"icon icon-link"})),"\u6805\u683c\u95f4\u9694"),o.a.createElement("p",null,"\u6805\u683c\u5e38\u5e38\u9700\u8981\u548c\u95f4\u9694\u8fdb\u884c\u914d\u5408\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 ",o.a.createElement("code",null,"gutter")," \u5c5e\u6027\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 ",o.a.createElement("code",null,"(16+8n)px")," \u4f5c\u4e3a\u6805\u683c\u95f4\u9694(n \u662f\u81ea\u7136\u6570)\uff0c\u5982\u679c\u8981\u652f\u6301\u54cd\u5e94\u5f0f\uff0c\u53ef\u4ee5\u5199\u6210 ",o.a.createElement("code",null,"{"," xs: 8, sm: 16, md: 24, lg: 32 ","}"),"\u3002\u5982\u679c\u9700\u8981\u5782\u76f4\u95f4\u8ddd\uff0c\u53ef\u4ee5\u5199\u6210\u6570\u7ec4\u5f62\u5f0f ",o.a.createElement("code",null,"[\u6c34\u5e73\u95f4\u8ddd, \u5782\u76f4\u95f4\u8ddd][16, ","{"," xs: 8, sm: 16, md: 24, lg: 32 ","}","]"),"\u3002")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:"import React from 'react';\nimport ProCard from '../src/index';\n\nexport default () => {\n  return (\n    <>\n      <ProCard gutter={[16, 16]}>\n        <ProCard colSpan=\"300px\" title=\"title\" headerBordered bordered>\n          300px\n        </ProCard>\n        <ProCard bordered>Auto</ProCard>\n      </ProCard>\n\n      <ProCard gutter={[{ xs: 8, sm: 8, md: 16, lg: 24, xl: 32 }, 16]} style={{ marginTop: 16 }}>\n        <ProCard bordered>Responsive</ProCard>\n        <ProCard bordered>Responsive</ProCard>\n        <ProCard bordered>Responsive</ProCard>\n      </ProCard>\n\n      <ProCard gutter={16} style={{ marginTop: 16 }}>\n        <ProCard bordered>Auto</ProCard>\n        <ProCard bordered>Auto</ProCard>\n        <ProCard bordered>Auto</ProCard>\n      </ProCard>\n    </>\n  );\n};\n",jsx:"import React from 'react';\nimport ProCard from '../src/index';\n\nexport default () => (\n  <>\n    <ProCard gutter={[16, 16]}>\n      <ProCard colSpan=\"300px\" title=\"title\" headerBordered bordered>\n        300px\n      </ProCard>\n      <ProCard bordered>Auto</ProCard>\n    </ProCard>\n\n    <ProCard\n      gutter={[\n        {\n          xs: 8,\n          sm: 8,\n          md: 16,\n          lg: 24,\n          xl: 32,\n        },\n        16,\n      ]}\n      style={{\n        marginTop: 16,\n      }}\n    >\n      <ProCard bordered>Responsive</ProCard>\n      <ProCard bordered>Responsive</ProCard>\n      <ProCard bordered>Responsive</ProCard>\n    </ProCard>\n\n    <ProCard\n      gutter={16}\n      style={{\n        marginTop: 16,\n      }}\n    >\n      <ProCard bordered>Auto</ProCard>\n      <ProCard bordered>Auto</ProCard>\n      <ProCard bordered>Auto</ProCard>\n    </ProCard>\n  </>\n);\n"}},{background:"#f0f2f5",path:"/_demos/gutter",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(u,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u6807\u9898\u5e26\u5206\u5272\u7ebf"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u6807\u9898\u5e26\u5206\u5272\u7ebf"},o.a.createElement("span",{className:"icon icon-link"})),"\u6807\u9898\u5e26\u5206\u5272\u7ebf"),o.a.createElement("p",null,"\u5f53\u6dfb\u52a0\u5206\u9694\u7ebf\u65f6\u4f1a\u81ea\u52a8\u589e\u52a0\u6807\u9898\u7684\u9ad8\u5ea6\u4e0e\u5185\u5bb9\u533a\u57df\u5206\u5f00\u3002")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => {\n  return (\n    <ProCard title="\u6807\u9898" extra="extra" tip="\u8fd9\u662f\u63d0\u793a" style={{ width: 300 }} headerBordered>\n      \u5185\u5bb9\n    </ProCard>\n  );\n};\n',jsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => (\n  <ProCard\n    title="\u6807\u9898"\n    extra="extra"\n    tip="\u8fd9\u662f\u63d0\u793a"\n    style={{\n      width: 300,\n    }}\n    headerBordered\n  >\n    \u5185\u5bb9\n  </ProCard>\n);\n'}},{background:"#f0f2f5",path:"/_demos/header-bordered",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(b,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u53ef\u6298\u53e0"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u53ef\u6298\u53e0"},o.a.createElement("span",{className:"icon icon-link"})),"\u53ef\u6298\u53e0"),o.a.createElement("ul",null,o.a.createElement("li",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528 ",o.a.createElement("code",null,"collapsible")," \u6765\u914d\u7f6e\u5361\u7247\u662f\u5426\u53ef\u6298\u53e0\uff0c\u901a\u8fc7 ",o.a.createElement("code",null,"defaultCollapsed")," \u5c5e\u6027\u914d\u7f6e\u662f\u5426\u9ed8\u8ba4\u6298\u53e0\u3002"),o.a.createElement("li",null,"\u6216\u8005\u4f60\u53ef\u4ee5\u901a\u8fc7 ",o.a.createElement("code",null,"collapsed")," \u5c5e\u6027\u53d7\u63a7\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002"))),o.a.createElement(i.a,Object(r["a"])({source:{tsx:"import React, { useState } from 'react';\nimport { RightOutlined } from '@ant-design/icons';\nimport ProCard from '../src/index';\n\nexport default () => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  return (\n    <>\n      <ProCard\n        title=\"\u53ef\u6298\u53e0\"\n        headerBordered\n        collapsible\n        defaultCollapsed\n        onCollapse={(collapse) => console.log(collapse)}\n      >\n        \u5185\u5bb9\n      </ProCard>\n      <ProCard\n        title=\"\u53ef\u6298\u53e0-\u53d7\u63a7\u81ea\u5b9a\u4e49\"\n        extra={\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        }\n        style={{ marginTop: 16 }}\n        headerBordered\n        collapsed={collapsed}\n      >\n        \u5185\u5bb9\n      </ProCard>\n    </>\n  );\n};\n",jsx:"import React, { useState } from 'react';\nimport { RightOutlined } from '@ant-design/icons';\nimport ProCard from '../src/index';\n\nexport default () => {\n  const [collapsed, setCollapsed] = useState(true);\n  return (\n    <>\n      <ProCard\n        title=\"\u53ef\u6298\u53e0\"\n        headerBordered\n        collapsible\n        defaultCollapsed\n        onCollapse={collapse => console.log(collapse)}\n      >\n        \u5185\u5bb9\n      </ProCard>\n      <ProCard\n        title=\"\u53ef\u6298\u53e0-\u53d7\u63a7\u81ea\u5b9a\u4e49\"\n        extra={\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        }\n        style={{\n          marginTop: 16,\n        }}\n        headerBordered\n        collapsed={collapsed}\n      >\n        \u5185\u5bb9\n      </ProCard>\n    </>\n  );\n};\n"}},{background:"#f0f2f5",path:"/_demos/collapsible",CSSInDependencies:["antd/dist/antd.css"],dependencies:{"@ant-design/icons":"4.2.2",antd:"4.5.3","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(f,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u5185\u5bb9\u5c45\u4e2d"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u5185\u5bb9\u5c45\u4e2d"},o.a.createElement("span",{className:"icon icon-link"})),"\u5185\u5bb9\u5c45\u4e2d"),o.a.createElement("p",null,"\u914d\u7f6e ",o.a.createElement("code",null,"layout"),"\u5c5e\u6027\u4e3a",o.a.createElement("code",null,"center"),"\u63a7\u5236\u5185\u5bb9\u5782\u76f4\u5c45\u4e2d\u3002")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => {\n  return (\n    <ProCard title="\u6807\u9898" extra="extra" layout="center" style={{ width: 300 }}>\n      \u5185\u5bb9\u5782\u76f4\u5c45\u4e2d\n    </ProCard>\n  );\n};\n',jsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => (\n  <ProCard\n    title="\u6807\u9898"\n    extra="extra"\n    layout="center"\n    style={{\n      width: 300,\n    }}\n  >\n    \u5185\u5bb9\u5782\u76f4\u5c45\u4e2d\n  </ProCard>\n);\n'}},{background:"#f0f2f5",path:"/_demos/layout",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(C,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u52a0\u8f7d\u4e2d"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u52a0\u8f7d\u4e2d"},o.a.createElement("span",{className:"icon icon-link"})),"\u52a0\u8f7d\u4e2d"),o.a.createElement("p",null,"\u914d\u7f6e ",o.a.createElement("code",null,"loading"),"\u5c5e\u6027\u4e3a",o.a.createElement("code",null,"true"),"\u63a7\u5236\u5361\u7247\u52a0\u8f7d\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f20\u5165 DOM \u7ed9",o.a.createElement("code",null,"loading"),"\u6765\u81ea\u5b9a\u4e49 loading \u5c55\u793a\u3002")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:"import React from 'react';\nimport ProCard from '../src/index';\n\nexport default () => {\n  return (\n    <>\n      <ProCard loading style={{ width: 300 }}>\n        \u5185\u5bb9\n      </ProCard>\n\n      <ProCard\n        title=\"\u81ea\u5b9a\u4e49 Loading\"\n        extra=\"extra\"\n        loading={<div>\u52a0\u8f7d\u4e2d</div>}\n        style={{ width: 300, marginTop: 16 }}\n      >\n        \u5185\u5bb9\n      </ProCard>\n    </>\n  );\n};\n",jsx:"import React from 'react';\nimport ProCard from '../src/index';\n\nexport default () => (\n  <>\n    <ProCard\n      loading\n      style={{\n        width: 300,\n      }}\n    >\n      \u5185\u5bb9\n    </ProCard>\n\n    <ProCard\n      title=\"\u81ea\u5b9a\u4e49 Loading\"\n      extra=\"extra\"\n      loading={<div>\u52a0\u8f7d\u4e2d</div>}\n      style={{\n        width: 300,\n        marginTop: 16,\n      }}\n    >\n      \u5185\u5bb9\n    </ProCard>\n  </>\n);\n"}},{background:"#f0f2f5",path:"/_demos/loading",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(y,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u65e0\u6807\u9898"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u65e0\u6807\u9898"},o.a.createElement("span",{className:"icon icon-link"})),"\u65e0\u6807\u9898"),o.a.createElement("p",null,"\u5934\u90e8\u6ca1\u6709\u5185\u5bb9\u65f6\u4f1a\u81ea\u52a8\u9690\u85cf\u3002")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:"import React from 'react';\nimport ProCard from '../src/index';\n\nexport default () => {\n  return <ProCard style={{ width: 300 }}>\u5185\u5bb9</ProCard>;\n};\n",jsx:"import React from 'react';\nimport ProCard from '../src/index';\n\nexport default () => (\n  <ProCard\n    style={{\n      width: 300,\n    }}\n  >\n    \u5185\u5bb9\n  </ProCard>\n);\n"}},{background:"#f0f2f5",path:"/_demos/headless",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(x,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u5e26\u8fb9\u6846"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u5e26\u8fb9\u6846"},o.a.createElement("span",{className:"icon icon-link"})),"\u5e26\u8fb9\u6846"),o.a.createElement("p",null,"\u914d\u7f6e ",o.a.createElement("code",null,"bordered")," \u5c5e\u6027\u63a7\u5236\u662f\u5426\u5361\u7247\u5e26\u8fb9\u6846\u3002")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => {\n  return (\n    <ProCard title="\u6807\u9898" extra="extra" tip="\u8fd9\u662f\u63d0\u793a" style={{ width: 300 }} bordered>\n      \u5185\u5bb9\n    </ProCard>\n  );\n};\n',jsx:'import React from \'react\';\nimport ProCard from \'../src/index\';\n\nexport default () => (\n  <ProCard\n    title="\u6807\u9898"\n    extra="extra"\n    tip="\u8fd9\u662f\u63d0\u793a"\n    style={{\n      width: 300,\n    }}\n    bordered\n  >\n    \u5185\u5bb9\n  </ProCard>\n);\n'}},{path:"/_demos/bordered",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(h,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u57fa\u672c-tabs-\u5361\u7247"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u57fa\u672c-tabs-\u5361\u7247"},o.a.createElement("span",{className:"icon icon-link"})),"\u57fa\u672c tabs \u5361\u7247"),o.a.createElement("p",null,"// \u5f85\u5b9e\u73b0")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport { Tabs } from \'antd\';\nimport ProCard from \'../src/index\';\n\nconst { TabPane } = Tabs;\n\nexport default () => {\n  return (\n    <ProCard bordered>\n      <Tabs>\n        <TabPane tab="Tab 1" key="1">\n          Content of Tab 1\n        </TabPane>\n        <TabPane tab="Tab 2" key="2">\n          Content of Tab 2\n        </TabPane>\n        <TabPane tab="Tab 3" key="3">\n          Content of Tab 3\n        </TabPane>\n      </Tabs>\n    </ProCard>\n  );\n};\n',jsx:'import React from \'react\';\nimport { Tabs } from \'antd\';\nimport ProCard from \'../src/index\';\n\nconst { TabPane } = Tabs;\nexport default () => (\n  <ProCard bordered>\n    <Tabs>\n      <TabPane tab="Tab 1" key="1">\n        Content of Tab 1\n      </TabPane>\n      <TabPane tab="Tab 2" key="2">\n        Content of Tab 2\n      </TabPane>\n      <TabPane tab="Tab 3" key="3">\n        Content of Tab 3\n      </TabPane>\n    </Tabs>\n  </ProCard>\n);\n'}},{background:"#f0f2f5",path:"/_demos/tabs",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(S,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u5782\u76f4-steps-\u5361\u7247"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u5782\u76f4-steps-\u5361\u7247"},o.a.createElement("span",{className:"icon icon-link"})),"\u5782\u76f4 steps \u5361\u7247"),o.a.createElement("p",null,"// \u5f85\u5b9e\u73b0")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React, { useState } from \'react\';\nimport { Steps, Button, Space } from \'antd\';\nimport ProCard from \'../src/index\';\n\nconst { Step } = Steps;\n\nexport default () => {\n  const [current, setCurrent] = useState(0);\n  return (\n    <ProCard split="vertical" bordered>\n      <ProCard colSpan="25%">\n        <Steps direction="vertical" size="small" current={current} style={{ height: 320 }}>\n          <Step title="\u586b\u5199\u57fa\u672c\u4fe1\u606f" />\n          <Step title="\u914d\u7f6e\u6a21\u677f" />\n          <Step title="\u914d\u7f6e\u8bbf\u95ee" />\n          <Step title="\u914d\u7f6e\u90e8\u7f72\u548c\u8c03\u5ea6" />\n          <Step title="\u9884\u89c8" />\n        </Steps>\n      </ProCard>\n      <ProCard title="\u6d41\u91cf\u5360\u7528\u60c5\u51b5">\n        <Space>\n          <Button type="primary" onClick={() => setCurrent(current + 1)} disabled={current === 5}>\n            \u4e0b\u4e00\u6b65\n          </Button>\n          <Button onClick={() => setCurrent(current - 1)} disabled={current === 0}>\n            \u4e0a\u4e00\u6b65\n          </Button>\n        </Space>\n      </ProCard>\n    </ProCard>\n  );\n};\n',jsx:'import React, { useState } from \'react\';\nimport { Steps, Button, Space } from \'antd\';\nimport ProCard from \'../src/index\';\n\nconst { Step } = Steps;\nexport default () => {\n  const [current, setCurrent] = useState(0);\n  return (\n    <ProCard split="vertical" bordered>\n      <ProCard colSpan="25%">\n        <Steps\n          direction="vertical"\n          size="small"\n          current={current}\n          style={{\n            height: 320,\n          }}\n        >\n          <Step title="\u586b\u5199\u57fa\u672c\u4fe1\u606f" />\n          <Step title="\u914d\u7f6e\u6a21\u677f" />\n          <Step title="\u914d\u7f6e\u8bbf\u95ee" />\n          <Step title="\u914d\u7f6e\u90e8\u7f72\u548c\u8c03\u5ea6" />\n          <Step title="\u9884\u89c8" />\n        </Steps>\n      </ProCard>\n      <ProCard title="\u6d41\u91cf\u5360\u7528\u60c5\u51b5">\n        <Space>\n          <Button type="primary" onClick={() => setCurrent(current + 1)} disabled={current === 5}>\n            \u4e0b\u4e00\u6b65\n          </Button>\n          <Button onClick={() => setCurrent(current - 1)} disabled={current === 0}>\n            \u4e0a\u4e00\u6b65\n          </Button>\n        </Space>\n      </ProCard>\n    </ProCard>\n  );\n};\n'}},{background:"#f0f2f5",path:"/_demos/steps-v",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(v,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h3",{id:"\u5782\u76f4-tabs-\u5361\u7247"},o.a.createElement("a",{"aria-hidden":"true",href:"#\u5782\u76f4-tabs-\u5361\u7247"},o.a.createElement("span",{className:"icon icon-link"})),"\u5782\u76f4 tabs \u5361\u7247"),o.a.createElement("p",null,"// \u5f85\u5b9e\u73b0")),o.a.createElement(i.a,Object(r["a"])({source:{tsx:'import React from \'react\';\nimport { Tabs } from \'antd\';\nimport ProCard from \'../src/index\';\n\nconst { TabPane } = Tabs;\n\nexport default () => {\n  return (\n    <ProCard bordered>\n      <Tabs tabPosition="left">\n        <TabPane tab="Tab 1" key="1">\n          Content of Tab 1\n        </TabPane>\n        <TabPane tab="Tab 2" key="2">\n          Content of Tab 2\n        </TabPane>\n        <TabPane tab="Tab 3" key="3">\n          Content of Tab 3\n        </TabPane>\n      </Tabs>\n    </ProCard>\n  );\n};\n',jsx:'import React from \'react\';\nimport { Tabs } from \'antd\';\nimport ProCard from \'../src/index\';\n\nconst { TabPane } = Tabs;\nexport default () => (\n  <ProCard bordered>\n    <Tabs tabPosition="left">\n      <TabPane tab="Tab 1" key="1">\n        Content of Tab 1\n      </TabPane>\n      <TabPane tab="Tab 2" key="2">\n        Content of Tab 2\n      </TabPane>\n      <TabPane tab="Tab 3" key="3">\n        Content of Tab 3\n      </TabPane>\n    </Tabs>\n  </ProCard>\n);\n'}},{background:"#f0f2f5",path:"/_demos/tabs-v",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.5.3","@ant-design/icons":"4.2.2","rc-util":"5.0.6",classnames:"2.2.6"},files:{"src/index.tsx":{path:"../src/index",content:"import React, { ReactNode } from 'react';\nimport { ConfigConsumer, ConfigConsumerProps } from 'antd/lib/config-provider/context';\nimport { Grid } from 'antd';\nimport { RightOutlined } from '@ant-design/icons';\nimport useMergedState from 'rc-util/lib/hooks/useMergedState';\nimport { LabelIconTip } from '@ant-design/pro-utils';\nimport classNames from 'classnames';\nimport CardLoading from './cardLoading';\nimport './style/index.less';\n\nconst { useBreakpoint } = Grid;\n\ntype ProCardType = React.FC<ProCardProps> & {\n  isProCard: boolean;\n};\n\ntype ProCardChildType = React.ReactElement<ProCardProps, ProCardType>;\n\ntype ColSpanType = number | string;\nexport type Breakpoint = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\nexport type Gutter = number | Partial<Record<Breakpoint, number>>;\n\nexport type ProCardProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * \u6807\u9898\u6837\u5f0f\n   */\n  headStyle?: React.CSSProperties;\n  /**\n   * \u5185\u5bb9\u6837\u5f0f\n   */\n  bodyStyle?: React.CSSProperties;\n  /**\n   * \u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf\n   */\n  headerBordered?: boolean;\n  /**\n   * \u5361\u7247\u6807\u9898\n   */\n  title?: React.ReactNode;\n  /**\n   * \u6807\u9898\u8bf4\u660e\n   */\n  tip?: string;\n  /**\n   * \u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df\n   */\n  extra?: React.ReactNode;\n  /**\n   * \u5e03\u5c40\uff0ccenter \u4ee3\u8868\u5782\u76f4\u5c45\u4e2d\n   */\n  layout?: 'default' | 'center';\n  /**\n   * \u52a0\u8f7d\u4e2d\n   */\n  loading?: boolean | ReactNode;\n  /**\n   * \u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6\u6216\u767e\u5206\uff0c\u9700\u8981\u652f\u6301\u54cd\u5e94\u5f0f colSpan={{ xs: 12, sm: 6 }}\n   */\n  colSpan?: ColSpanType | Partial<Record<Breakpoint, ColSpanType>>;\n  /**\n   * \u6805\u683c\u95f4\u8ddd\n   */\n  gutter?: Gutter | Gutter[];\n  /**\n   * \u62c6\u5206\u5361\u7247\u65b9\u5f0f\n   */\n  split?: 'vertical' | 'horizontal';\n  /**\n   * \u662f\u5426\u6709\u8fb9\u6846\n   */\n  bordered?: boolean;\n  /**\n   * \u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u80cc\u666f\u989c\u8272\u3002\n   */\n  ghost?: boolean;\n  /**\n   * \u662f\u5426\u53ef\u6298\u53e0\n   */\n  collapsible?: boolean;\n  /**\n   * \u53d7\u63a7 collapsed \u5c5e\u6027\n   */\n  collapsed?: boolean;\n  /**\n   * \u914d\u7f6e\u9ed8\u8ba4\u662f\u5426\u6298\u53e0\n   */\n  defaultCollapsed?: boolean;\n  /**\n   * \u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\n   */\n  onCollapse?: (collapsed: boolean) => void;\n};\n\nconst ProCard: ProCardType = (props) => {\n  const {\n    className,\n    style,\n    bodyStyle = {},\n    headStyle = {},\n    title,\n    extra,\n    tip,\n    layout,\n    loading,\n    colSpan,\n    gutter = 0,\n    split,\n    headerBordered = false,\n    bordered = false,\n    children,\n    ghost = false,\n    collapsed: controlCollapsed,\n    collapsible = false,\n    defaultCollapsed = false,\n    onCollapse,\n  } = props;\n\n  const screens = useBreakpoint();\n\n  const [collapsed, setCollapsed] = useMergedState<boolean>(defaultCollapsed, {\n    value: controlCollapsed,\n    onChange: onCollapse,\n  });\n\n  // \u987a\u5e8f\u51b3\u5b9a\u5982\u4f55\u8fdb\u884c\u54cd\u5e94\u5f0f\u53d6\u503c\uff0c\u6309\u6700\u5927\u54cd\u5e94\u503c\u4f9d\u6b21\u53d6\u503c\uff0c\u8bf7\u52ff\u4fee\u6539\u3002\n  const responsiveArray: Breakpoint[] = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\n\n  /**\n   * \u6839\u636e\u54cd\u5e94\u5f0f\u83b7\u53d6 gutter, \u53c2\u8003 antd \u5b9e\u73b0\n   * @param gutter gutter\n   */\n  const getNormalizedGutter = (gut: Gutter | Gutter[]) => {\n    const results: [number, number] = [0, 0];\n    const normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i += 1) {\n          const breakpoint: Breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint] as number;\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  /**\n   * \u6839\u636e\u6761\u4ef6\u8fd4\u56de style\uff0c\u8d1f\u8d23\u8fd4\u56de\u7a7a\u5bf9\u8c61\n   * @param withStyle \u662f\u5426\u7b26\u5408\u6761\u4ef6\n   * @param appendStyle \u5982\u679c\u7b26\u5408\u6761\u4ef6\u8981\u8fd4\u56de\u7684 style \u5c5e\u6027\n   */\n  const getStyle = (withStyle: boolean, appendStyle: React.CSSProperties) => {\n    return withStyle ? appendStyle : {};\n  };\n\n  return (\n    <ConfigConsumer>\n      {({ getPrefixCls }: ConfigConsumerProps) => {\n        const prefixCls = getPrefixCls('pro-card');\n\n        const normalizedGutter = getNormalizedGutter(gutter);\n\n        // \u5224\u65ad\u662f\u5426\u5957\u4e86\u5361\u7247\uff0c\u5982\u679c\u5957\u4e86\u7684\u8bdd\u5c06\u81ea\u8eab\u5361\u7247\u5185\u90e8\u5185\u5bb9\u7684 padding \u8bbe\u7f6e\u4e3a0\n        let containProCard;\n        const childrenArray = React.Children.toArray(children) as ProCardChildType[];\n\n        const childrenModified = childrenArray.map((element, index) => {\n          if (element?.type?.isProCard) {\n            containProCard = true;\n\n            // \u53f3\u4fa7\u7a7a\u9699\n            const gutterRightStyle = getStyle(\n              normalizedGutter[0]! > 0 && index !== childrenArray.length - 1,\n              {\n                marginRight: normalizedGutter[0],\n              },\n            );\n\n            // \u4e0b\u65b9\u7a7a\u9699\n            const gutterBottomStyle = getStyle(normalizedGutter[1]! > 0, {\n              marginBottom: normalizedGutter[1],\n            });\n\n            // \u5f53 split \u6709\u503c\u65f6\uff0c\u5185\u90e8\u5361\u7247 radius \u8bbe\u7f6e\u4e3a 0\n            const splitStyle = getStyle(split === 'vertical' || split === 'horizontal', {\n              borderRadius: 0,\n            });\n\n            return React.cloneElement(element, {\n              className: classNames(element.props.className, {\n                // \u6a2a\u7eb5\u5207\u5272\n                [`${prefixCls}-split-vertical`]:\n                  split === 'vertical' && index !== childrenArray.length - 1,\n                [`${prefixCls}-split-horizontal`]:\n                  split === 'horizontal' && index !== childrenArray.length - 1,\n              }),\n              style: {\n                ...gutterRightStyle,\n                ...gutterBottomStyle,\n                ...splitStyle,\n                ...element.props.style,\n              },\n            });\n          }\n          return element;\n        });\n\n        let span = colSpan;\n\n        // colSpan \u54cd\u5e94\u5f0f\n        if (typeof colSpan === 'object') {\n          for (let i = 0; i < responsiveArray.length; i += 1) {\n            const breakpoint: Breakpoint = responsiveArray[i];\n            if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {\n              span = colSpan[breakpoint];\n              break;\n            }\n          }\n        }\n\n        // \u5f53 colSpan \u4e3a 30% \u6216 300px \u65f6\n        const colSpanStyle = getStyle(typeof span === 'string' && /\\d%|\\dpx/i.test(span), {\n          width: span as string,\n          flexShrink: 0,\n        });\n\n        const cardStyle = {\n          ...colSpanStyle,\n          ...style,\n        };\n\n        const cardCls = classNames(`${prefixCls}`, className, {\n          [`${prefixCls}-span-${span}`]: typeof span === 'number' && span > 0 && span <= 24,\n          [`${prefixCls}-border`]: bordered,\n          [`${prefixCls}-contain-card`]: containProCard,\n          [`${prefixCls}-loading`]: loading,\n          [`${prefixCls}-split`]: split === 'vertical' || split === 'horizontal',\n          [`${prefixCls}-ghost`]: ghost,\n        });\n\n        const headerCls = classNames(`${prefixCls}-header`, {\n          [`${prefixCls}-header-border`]: headerBordered,\n          [`${prefixCls}-header-collapse`]: collapsed,\n        });\n\n        const bodyCls = classNames(`${prefixCls}-body`, {\n          [`${prefixCls}-body-center`]: layout === 'center',\n          [`${prefixCls}-body-column`]: split === 'horizontal',\n          [`${prefixCls}-body-collapse`]: collapsed,\n          [`${prefixCls}-body-ghost`]: ghost,\n        });\n\n        const loadingBlockStyle =\n          bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? { padding: 24 } : undefined;\n\n        const loadingDOM = React.isValidElement(loading) ? (\n          loading\n        ) : (\n          <CardLoading prefix={prefixCls} style={loadingBlockStyle} />\n        );\n\n        // \u975e\u53d7\u63a7\u60c5\u51b5\u4e0b\u5c55\u793a\n        const collapsibleButton = collapsible && controlCollapsed === undefined && (\n          <RightOutlined\n            rotate={!collapsed ? 90 : undefined}\n            className={`${prefixCls}-collapsible-icon`}\n            onClick={() => {\n              setCollapsed(!collapsed);\n            }}\n          />\n        );\n\n        return (\n          <div className={cardCls} style={cardStyle}>\n            {(title || extra || collapsibleButton) && (\n              <div className={headerCls} style={headStyle}>\n                <div className={`${prefixCls}-title`}>\n                  <LabelIconTip label={title} tip={tip} />\n                  {collapsibleButton}\n                </div>\n                <div className={`${prefixCls}-extra`}>{extra}</div>\n              </div>\n            )}\n            <div className={bodyCls} style={bodyStyle}>\n              {loading ? loadingDOM : childrenModified}\n            </div>\n          </div>\n        );\n      }}\n    </ConfigConsumer>\n  );\n};\n\nProCard.isProCard = true;\n\nexport default ProCard;\n"},"cardLoading.tsx":{path:"./cardLoading",content:"import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport './style/index.less';\n\ntype CardLoadingProps = {\n  /**\n   * \u7c7b\u540d\n   */\n  className?: string;\n  /**\n   * \u6837\u5f0f\u5c5e\u6027\n   */\n  style?: React.CSSProperties;\n  /**\n   * prefix\n   */\n  prefix?: string;\n};\n\nconst CardLoading: React.FC<CardLoadingProps> = (props) => {\n  const { style, prefix } = props;\n\n  return (\n    <div className={`${prefix}-loading-content`} style={style}>\n      <Row gutter={8}>\n        <Col span={22}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={8}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={15}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={6}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={18}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={13}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={9}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col span={4}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={3}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n        <Col span={16}>\n          <div className={`${prefix}-loading-block`} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CardLoading;\n"},"style/index.less":{path:"./style/index.less",content:"@import (reference) '~antd/lib/style/themes/default';\n@pro-card-prefix-cls: ~'@{ant-prefix}-pro-card';\n\n@gradient-min: fade(@card-skeleton-bg, 20%);\n@gradient-max: fade(@card-skeleton-bg, 40%);\n\n.@{pro-card-prefix-cls} {\n  background-color: white;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  border-radius: @card-radius;\n  width: 100%;\n\n  &-border {\n    border: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-ghost {\n    background-color: transparent;\n  }\n\n  &-split > &-body {\n    padding: 0;\n  }\n\n  &-split-vertical {\n    border-right: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-split-horizontal {\n    border-bottom: @border-width-base @border-style-base @border-color-split;\n  }\n\n  &-contain-card > &-body {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n  }\n\n  &-contain-card > &-body-column {\n    flex-direction: column;\n  }\n\n  &-header {\n    display: flex;\n    justify-content: space-between;\n    padding: @padding-md;\n    padding-bottom: 0;\n    &-border {\n      & {\n        padding-bottom: @padding-md;\n      }\n      border-bottom: @border-width-base @border-style-base @border-color-split;\n    }\n\n    &-collapse {\n      & {\n        padding-bottom: @padding-md;\n      }\n    }\n  }\n\n  &-collapsible-icon {\n    color: @icon-color-hover;\n    margin-left: 8px;\n\n    & svg {\n      transition: transform @animation-duration-base;\n    }\n  }\n\n  &-title {\n    font-weight: bold;\n  }\n\n  &-body {\n    display: block;\n    padding: @padding-md;\n    box-sizing: border-box;\n    overflow: hidden;\n\n    &-center {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    &-collapse {\n      display: none;\n    }\n\n    &-ghost {\n      padding: 0;\n      background-color: transparent;\n    }\n  }\n\n  &-loading {\n    overflow: hidden;\n  }\n\n  &-loading &-body {\n    user-select: none;\n  }\n\n  &-loading-content {\n    p {\n      margin: 0;\n    }\n  }\n\n  &-loading-block {\n    height: 14px;\n    margin: 4px 0;\n    background: linear-gradient(90deg, @gradient-min, @gradient-max, @gradient-min);\n    background-size: 600% 600%;\n    border-radius: @card-radius;\n    animation: card-loading 1.4s ease infinite;\n  }\n}\n\n@keyframes card-loading {\n  0%,\n  100% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.loop-grid-columns(@index) when (@index > 0) {\n  .@{pro-card-prefix-cls}-span-@{index} {\n    width: percentage((@index / @grid-columns));\n    flex-grow: 0;\n  }\n  .loop-grid-columns((@index - 1));\n}\n\n.loop-grid-columns(@grid-columns);\n"}}}),o.a.createElement(P,null)),o.a.createElement("div",{className:"markdown"},o.a.createElement("h2",{id:"api"},o.a.createElement("a",{"aria-hidden":"true",href:"#api"},o.a.createElement("span",{className:"icon icon-link"})),"API"),o.a.createElement("table",null,o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",{align:"left"},"\u53c2\u6570"),o.a.createElement("th",{align:"left"},"\u8bf4\u660e"),o.a.createElement("th",{align:"left"},"\u7c7b\u578b"),o.a.createElement("th",{align:"left"},"\u9ed8\u8ba4\u503c"))),o.a.createElement("tbody",null,o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"\xa0title"),o.a.createElement("td",{align:"left"},"\u6807\u9898"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"React.ReactNode")),o.a.createElement("td",{align:"left"},"-")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"\xa0tip"),o.a.createElement("td",{align:"left"},"\u6807\u9898\u53f3\u4fa7\u56fe\u6807 hover \u63d0\u793a\u4fe1\u606f"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"string")),o.a.createElement("td",{align:"left"},"-")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"\xa0extra"),o.a.createElement("td",{align:"left"},"\u53f3\u4e0a\u89d2\u81ea\u5b9a\u4e49\u533a\u57df"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"React.ReactNode")),o.a.createElement("td",{align:"left"},"-")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"\xa0layout"),o.a.createElement("td",{align:"left"},"\u5185\u5bb9\u5e03\u5c40\uff0c\u652f\u6301\u5782\u76f4\u5c45\u4e2d"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"default"),"\xa0| ",o.a.createElement("code",null,"center"),"\xa0"),o.a.createElement("td",{align:"left"},"default")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"\xa0loading"),o.a.createElement("td",{align:"left"},"\u52a0\u8f7d\u4e2d\uff0c\u652f\u6301\u81ea\u5b9a\u4e49 loading \u6837\u5f0f"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"boolean")," | ",o.a.createElement("code",null,"ReactNode")),o.a.createElement("td",{align:"left"},"false")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"colSpan"),o.a.createElement("td",{align:"left"},"\u6805\u683c\u5e03\u5c40\u5bbd\u5ea6\uff0c24 \u6805\u683c\uff0c\u652f\u6301\u6307\u5b9a\u5bbd\u5ea6 px \u6216\u767e\u5206\u6bd4, \u652f\u6301\u54cd\u5e94\u5f0f\u7684\u5bf9\u8c61\u5199\u6cd5 ",o.a.createElement("code",null,"{"," xs: 8, sm: 16, md: 24","}")),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"number")," | ",o.a.createElement("code",null,"string")),o.a.createElement("td",{align:"left"},"24")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"\xa0gutter"),o.a.createElement("td",{align:"left"},"\u6570\u5b57\u6216\u4f7f\u7528\u6570\u7ec4\u5f62\u5f0f\u540c\u65f6\u8bbe\u7f6e [\u6c34\u5e73\u95f4\u8ddd, \u5782\u76f4\u95f4\u8ddd], \u652f\u6301\u54cd\u5e94\u5f0f\u7684\u5bf9\u8c61\u5199\u6cd5 ",o.a.createElement("code",null,"{"," xs: 8, sm: 16, md: 24","}")),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"number")," | ",o.a.createElement("code",null,"array")),o.a.createElement("td",{align:"left"},"0")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"\xa0split"),o.a.createElement("td",{align:"left"},"\u62c6\u5206\u5361\u7247\u7684\u65b9\u5411"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"vertical")," | ",o.a.createElement("code",null,"horizontal"),"\xa0"),o.a.createElement("td",{align:"left"},"-")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"bordered"),o.a.createElement("td",{align:"left"},"\u662f\u5426\u6709\u8fb9\u6846"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"boolean")),o.a.createElement("td",{align:"left"},"false")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"ghost"),o.a.createElement("td",{align:"left"},"\u5e7d\u7075\u6a21\u5f0f\uff0c\u5373\u662f\u5426\u53d6\u6d88\u5361\u7247\u5185\u5bb9\u533a\u57df\u7684 padding \u548c \u5361\u7247\u7684\u80cc\u666f\u989c\u8272\u3002"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"boolean")),o.a.createElement("td",{align:"left"},"false")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"headerBordered"),o.a.createElement("td",{align:"left"},"\u9875\u5934\u662f\u5426\u6709\u5206\u5272\u7ebf"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"boolean")),o.a.createElement("td",{align:"left"},"false")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"collapsed"),o.a.createElement("td",{align:"left"},"\u53d7\u63a7\u5c5e\u6027\uff0c\u662f\u5426\u6298\u53e0"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"boolean")),o.a.createElement("td",{align:"left"},"false")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"collapsible"),o.a.createElement("td",{align:"left"},"\u914d\u7f6e\u662f\u5426\u53ef\u6298\u53e0\uff0c\u53d7\u63a7\u65f6\u65e0\u6548"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"boolean")),o.a.createElement("td",{align:"left"},"false")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"defaultCollapsed"),o.a.createElement("td",{align:"left"},"\u9ed8\u8ba4\u6298\u53e0, \u53d7\u63a7\u65f6\u65e0\u6548"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"boolean")),o.a.createElement("td",{align:"left"},"false")),o.a.createElement("tr",null,o.a.createElement("td",{align:"left"},"onCollapse"),o.a.createElement("td",{align:"left"},"\u6536\u8d77\u5361\u7247\u7684\u4e8b\u4ef6\uff0c\u53d7\u63a7\u65f6\u65e0\u6548"),o.a.createElement("td",{align:"left"},o.a.createElement("code",null,"(collapsed: boolean) => void;")),o.a.createElement("td",{align:"left"},"-"))))))}},nA6F:function(n,e,t){"use strict";t.r(e);var r=t("tJVT"),a=t("q1tI"),o=t.n(a),l=t("UESt"),i=t("FlLn");e["default"]=()=>{var n=Object(a["useState"])(!0),e=Object(r["a"])(n,2),t=e[0],s=e[1];return o.a.createElement(o.a.Fragment,null,o.a.createElement(i["a"],{title:"\u53ef\u6298\u53e0",headerBordered:!0,collapsible:!0,defaultCollapsed:!0,onCollapse:n=>console.log(n)},"\u5185\u5bb9"),o.a.createElement(i["a"],{title:"\u53ef\u6298\u53e0-\u53d7\u63a7\u81ea\u5b9a\u4e49",extra:o.a.createElement(l["a"],{rotate:t?void 0:90,onClick:()=>{s(!t)}}),style:{marginTop:16},headerBordered:!0,collapsed:t},"\u5185\u5bb9"))}},"px/x":function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(o["a"],{title:"\u6807\u9898",extra:"extra",tip:"\u8fd9\u662f\u63d0\u793a",style:{width:300},bordered:!0},"\u5185\u5bb9")},tp7c:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(a.a.Fragment,null,a.a.createElement(o["a"],{gutter:[16,16]},a.a.createElement(o["a"],{colSpan:"300px",title:"title",headerBordered:!0,bordered:!0},"300px"),a.a.createElement(o["a"],{bordered:!0},"Auto")),a.a.createElement(o["a"],{gutter:[{xs:8,sm:8,md:16,lg:24,xl:32},16],style:{marginTop:16}},a.a.createElement(o["a"],{bordered:!0},"Responsive"),a.a.createElement(o["a"],{bordered:!0},"Responsive"),a.a.createElement(o["a"],{bordered:!0},"Responsive")),a.a.createElement(o["a"],{gutter:16,style:{marginTop:16}},a.a.createElement(o["a"],{bordered:!0},"Auto"),a.a.createElement(o["a"],{bordered:!0},"Auto"),a.a.createElement(o["a"],{bordered:!0},"Auto")))},troW:function(n,e){},wFbQ:function(n,e,t){"use strict";t.r(e);t("Znn+");var r=t("ZTPi"),a=t("q1tI"),o=t.n(a),l=t("FlLn"),i=r["a"].TabPane;e["default"]=()=>o.a.createElement(l["a"],{bordered:!0},o.a.createElement(r["a"],null,o.a.createElement(i,{tab:"Tab 1",key:"1"},"Content of Tab 1"),o.a.createElement(i,{tab:"Tab 2",key:"2"},"Content of Tab 2"),o.a.createElement(i,{tab:"Tab 3",key:"3"},"Content of Tab 3")))},wXyp:function(n,e,t){"use strict";var r=t("TqRt"),a=t("284h");Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o=a(t("q1tI")),l=r(t("ygfH")),i=r(t("KQxl")),s=function(n,e){return o.createElement(i.default,Object.assign({},n,{ref:e,icon:l.default}))};s.displayName="CheckOutlined";var d=o.forwardRef(s);e.default=d},ygfH:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z"}}]},name:"check",theme:"outlined"};e.default=r},zk1z:function(n,e,t){"use strict";t.r(e);var r=t("q1tI"),a=t.n(r),o=t("FlLn");e["default"]=()=>a.a.createElement(o["a"],{style:{width:300}},"\u5185\u5bb9")}}]);